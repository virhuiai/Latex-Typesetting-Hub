% \iffalse meta-comment
%
%% File: parskip.dtx
%%   (C) Copyright 1989 H.Partl, TU Wien
%%   (C) Copyright 2001 Robin Fairbairns
%%   (C) Copyright 2018-2021 Frank Mittelbach
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    https://www.latex-project.org/lppl.txt
%
%
% The development version of the bundle can be found below
%
%    https://github.com/FrankMittelbach/fmitex-parskip/
%
% for those people who are interested or want to report an issue.
%
%<*driver>
\documentclass{article}
\usepackage{doc,url}
\EnableCrossrefs
\CodelineIndex
\begin{document}
  \DocInput{parskip.dtx}
\end{document}
%</driver>
%
% \fi
%
%
% \newcommand\option[1]{\texttt{#1}}
% \newcommand\cs[1]{\texttt{\bslash#1}}
% \newcommand\pkg[1]{\textsf{#1}}
%
% \title{The \texttt{parskip} package\thanks{This is a
%    reimplementation of a package originally written by Hubert Partl
% in 1989 and later maintained by Robin Fairbairns.\\这是 Hubert Partl 于 1989 年编写的宏包的重新实现版本，后来由 Robin Fairbairns 维护。}}
% \author{Frank Mittelbach\and {\tt virhuiai@qq.com\tiny 译}}
%
% \maketitle
%
% \begin{abstract}
%   The \pkg{parskip} package helps in implementing paragraph layouts
%   where the paragraphs are separated by a vertical space instead of
%   (or in addition to) indenting them.
%
% \pkg{parskip} 宏包有助于实现段落布局，其中段落是通过垂直间距而不是（或除了）缩进来分隔的。

%   The package can be used with any document class at any size.  By
%   default it produces the following paragraph layout: Zero
%   \cs{parindent} and non-zero \cs{parskip}. The stretchable glue in
%   \cs{parskip} helps \LaTeX{} in finding the best place for page
%   breaks.
%
% 该宏包可与任何文档类一起使用，任何大小。默认情况下，它产生以下段落布局：零 \cs{parindent} 和非零 \cs{parskip}。在 \cs{parskip} 中的可伸缩粘合剂有助于 \LaTeX{} 找到最佳的分页位置。

% \end{abstract}
%
% \section{Introduction\\介绍}
%
% Many \LaTeX{} constructs are internally built by using the paragraph
% mechanism even if technically there aren't text paragraphs. In most
% such cases the \LaTeX{} code handles indentation and suppressed it
% if necessary. But unfortunately this is normally not done for
% \cs{parskip} (as that is zero in the default layouts) and thus
% changing it will result in vertical spaces in unexpected places.
%
% 许多 \LaTeX{} 构造在内部使用段落机制，即使从技术上讲没有文本段落。在大多数这样的情况下，\LaTeX{} 代码处理缩进并在必要时抑制它。但是不幸的是，这通常不适用于 \cs{parskip}（因为在默认布局中它为零），因此更改它将导致在意想不到的位置出现垂直空间。

% This package attempts to fix the spacing in table of contents
% structures, list environments, and around display headings that would
% get screwed up by a positive \cs{parskip} value.
%
% 该宏包尝试修复目录结构、列表环境和周围显示标题中可能会受到正值 \cs{parskip} 的影响的间距。

%   It is, however, is no more than quick fix; the `proper' way to
%   achieve effects as far-reaching as this is to create a new class.
%
% 但是，它只是一个快速修复，达到如此广泛的效果的“正确”方法是创建一个新类。

% \subsection{History\\历史}
%
% This file was originally developed by Hubert Partl in 1989 (i.e.,
% for \LaTeX\,2.09) to provide a somewhat crude solution to an
% existing problem in case no proper document class (back then called
% document style) support was available.
%
% 该文件最初是由 Hubert Partl 在 1989 年（即为 \LaTeX,2.09）开发的，以提供一个有些粗糙的解决方案，以应对在没有适当的文档类（当时称为文档样式）支持的情况下存在的问题。

% About ten years later Robin Fairbairns picked up the orphaned
% package and his version was then the one available for \LaTeXe{}
% during the next 15\textsuperscript{+} years.
%
% 大约十年后，Robin Fairbairns 接手了这个被遗弃的宏包，他的版本随后在接下来的 15\textsuperscript{+} 年中可用于 \LaTeXe{}。
% 
% Finally, while working on the next edition of the \LaTeX{} Companion
% the current author did a reimplementation, that added support for TOC
% data and heading structures. Also a few additional key/value options
% were added to make the package more useful. It still is and will
% remain an inferior choice compared to a properly designed document
% class. But it offers a starting point if nothing is around.
%
%
% 最后，在编写下一版 \LaTeX{} 伴侣时，当前作者重新实现了宏包，增加了对 TOC 数据和标题结构的支持。还添加了一些额外的键/值选项，使该宏包更加有用。但它仍然是和将来会是一个次优选择，与一个适当设计的文档类相比。但如果没有其他可用的选择，它提供了一个起点。
%
% \section{The user interface\\用户界面}
%
% The \pkg{parskip} package doesn't offer any document user commands
% and just needs loading with \cs{usepackage}.
%
\pkg{parskip} 宏包没有提供任何文档用户命令，只需要用 \cs{usepackage} 命令载入即可。
%
% \subsection{Options to customize the package\\定制宏包的选项}\label{sec:options}
%
% All of the package options are implemented as key/value options.
% 
% 所有的宏包选项都是实现为键值选项的形式。
% \begin{description}
% \item[\option{skip}]
%    With the package option \texttt{skip} it is possible to explicitly
%    specify the vertical space between paragraphs. If the option is
%    not given (or given without a value) then \verb=.5\baselineskip=
%   plus \texttt{2pt} of stretch is assumed.
% \\使用选项 \texttt{skip} 可以明确指定段落之间的垂直间距。如果未指定该选项（或未给出值），则默认为 \verb=.5\baselineskip= 加上 \texttt{2pt} 的伸展量。
% \item[\option{tocskip}]
%    By default the \cs{parskip} is zero within \cs{tableofcontents}
%    and similar lists, regardless of its value elsewhere. With the
%    option \texttt{tocskip} it can be given a different value. If
%    used without an explicit value you get the same \cs{parskip} as elsewhere
%    within these lists.
% \\默认情况下，在 \cs{tableofcontents} 和类似列表中，\cs{parskip} 为零，而不管其它地方的值如何。使用选项 \texttt{tocskip} 可以给它赋予不同的值。如果在未明确给出值的情况下使用，则在这些列表中的其它地方使用相同的 \cs{parskip}。
% \item[\option{indent}]
%    With the package option \texttt{indent} it is possible to explicitly set
%    the paragraph indentation. Using this option without a value keeps the
%    document class indentation unchanged, if it is specified with a
%    value then that value is used. If the package is loaded without
%    this option
%    the indentation is set
%    to zero.
% \\使用选项 \texttt{indent} 可以明确设置段落缩进。如果不指定值使用该选项，则文档类的缩进不变，如果指定了值，则使用该值。如果在不带该选项的情况下载入宏包，则缩进为零。
% \item[\option{parfill}]
%    With package option \texttt{parfill}, the package also adjusts
%    \cs{parfillskip} to impose a minimum space at the end of
%    the last line of a paragraph. If specified without a value then
%    \texttt{30pt} are assumed, if a value is given that forms the minimum.
% \\使用选项 \texttt{parfill}，该宏包还会调整 \cs{parfillskip}，以强制在段落的最后一行添加最小间距。如果未指定值，则假定为 \texttt{30pt}，如果指定了值，则该值成为最小值。
% \end{description}
%
%
% \section{Differences to the original package\\与原始宏包的差异}
%
% If the package is used without any options or just with the option
% \option{parfill} it behaves like the earlier version, except that now
% the spacing around headings is also adjusted (not adding extra
% \cs{parskip}).  If this is not desirable when processing an  old
% document it can be avoided by explicitly
% requesting version \texttt{v1} as follows:
%
% 如果未使用任何选项或仅使用 \option{parfill} 选项，则该宏包的行为类似于早期版本，只是现在也会调整标题周围的间距（而不是添加额外的 \cs{parskip}）。如果在处理旧文档时不希望出现这种情况，则可以通过明确要求使用 \texttt{v1} 版本来避免，方法如下：
%
% \begin{quote}
%   \verb/\usepackage{parskip}[=v1]/
% \end{quote}
% Of course, the new options, etc.\ are then also not available.
%
% 当然，此时也不可用新选项等。
%
% \section{Sources, bugs and issues\\源、错误和问题}
%
% The official production version is available from CTAN.
% The latest (development) sources are maintained at GitHub at:
%
%官方生产版本可从 CTAN 获取。最新的（开发）源代码维护在 GitHub 上：
% \begin{quote}
%   \url{https://github.com/FrankMittelbach/fmitex-parskip}
% \end{quote}
% In case of problems with the package you can report them at

%如果使用该软件包出现问题，您可以在以下网址报告问题：
% \begin{quote}
%   \url{https://github.com/FrankMittelbach/fmitex-parskip/issues}
% \end{quote}
% Please provide a minimal test example that can be run and doesn't
% use packages not in a standard \LaTeX{} distribution (and only those
% that are needed to show the issue).
%
%请提供一个最小化的测试例子，可以运行并且不使用非标准\LaTeX{}分发包（只使用需要展示问题的那些包）。
% \StopEventually{}
%
%
%
%
% \section{The Implementation\\实现}
%
% \setcounter{StandardModuleDepth}{1}  % everything is inside a module\\一切都在一个模块中
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
%  \subsection{The main implementation part\\主要实现部分}
%
%
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}[2018-04-01]

\DeclareRelease       {v1}{2001-04-09}{parskip-2001-04-09.sty}
\DeclareCurrentRelease{v2}{2018-08-24}
%    \end{macrocode}
%
%    \begin{macrocode}
\ProvidesPackage{parskip}[2021-03-14 v2.0h non-zero parskip adjustments]
%    \end{macrocode}
%
%
%
% \subsubsection{Option handling\\选项处理}
%
% Here we define all option keys for use as package options:
%
%这里定义了所有用作软件包选项的选项键：
%    \begin{macrocode}
\RequirePackage{kvoptions}
\SetupKeyvalOptions{family=parskip,prefix=parskip@}
%    \end{macrocode}
%
%   The key \option{indent} defines the amount of indentation for each
%   paragraph. If not given the indentation will be zero (default) and
%   if given without a value then the outer value from the document
%   class will get used, otherwise the given value is used.
%
%键\option{indent}定义了每个段落的缩进量。如果没有给出，则缩进量为零（默认值）。如果没有给出值，则使用文档类的外部值，否则使用给定值。
%    \begin{macrocode}
\DeclareStringOption[0pt]{indent}[\parindent]
%    \end{macrocode}
%
%   The key \option{parfill} defines a minimum amount of white space
%   that should be left in the last line. By default the last line can
%   get completely fill up. If given without a value the default (as
%   before) is to require a minimum of \texttt{30pt}, otherwise the
%   given value is used.
%\\键\option{parfill}定义了应该在最后一行留下的最小白色空间量。默认情况下，最后一行可以完全填充。如果没有给出值，则默认值（与以前相同）为要求最小\texttt{30pt}。否则，使用给定值。
%    \begin{macrocode}
\DeclareStringOption[0pt]{parfill}[30pt]
%    \end{macrocode}
%
%   The key \option{skip} defines the vertical separation between
%   paragraphs. If not given the default (as before) is to use half a
%   \cs{baselineskip} plus a stretch of \texttt{2pt} to add some
%   flexibility. If given, one need to provide an explicit value which
%   is then used as a separation (and it needs to contain any extra
%   stretch if that is wanted, i.e., there is no extra stretch added
%   in this case). 
%\\键\option{skip}定义了段落之间的垂直间隔。如果没有给出，则默认值（与以前相同）为使用半个\cs{baselineskip}加上\texttt{2pt}的拉伸，以增加一些灵活性。如果给定，需要提供一个明确的值，然后将其用作分离（如果需要任何额外的拉伸，则需要包含它，即在这种情况下不会添加额外的拉伸）。
% \changes{v2.0f}{2020/06/15}{Allow \texttt{skip} key without value
%          without a package error (gh/14)}
%    \begin{macrocode}
\DeclareStringOption{skip}[]
%    \end{macrocode}
%
%    The key \option{tocskip} defines the vertical separation inside the lists
%    \cs{tableofcontents}, \cs{listoffigures} and \cs{listoftables}. By
%    default there is no extra separatation (i.e., \texttt{0pt}). If
%    specified without a value the standard \cs{parskip} is used,
%    otherwise the given value.
%
%关键字 \option{tocskip} 定义了在列表 \cs{tableofcontents}、\cs{listoffigures} 和 \cs{listoftables} 中的垂直间距。默认情况下没有额外的间隔（即 \texttt{0pt}）。如果未指定值，则使用标准的 \cs{parskip}，否则使用给定的值。
%    \begin{macrocode}
\DeclareStringOption[0pt]{tocskip}[\parskip]
%    \end{macrocode}
%
%   Execute any package options:

% 执行任何包选项：
%    \begin{macrocode}
\ProcessKeyvalOptions*
%    \end{macrocode}
%
%    So now we can evaluate the given options and adjust the
%    parameter settings:

% 现在我们可以评估给定的选项并调整参数设置：
%    \begin{macrocode}
\ifx\parskip@skip\@empty
%    \end{macrocode}
%    If no \option{skip} was given (or it was empty) set \cs{parskip}
%    to half of \verb=.5\baselineskip= plus \texttt{2pt} stretch. Stretch
%    or shrink inside \cs{baselineskip} is ignored in this case.

% 如果没有给出\option{skip}（或为空），则将\cs{parskip}设置为\verb=.5\baselineskip=的一半加上\texttt{2pt}的伸展。在此情况下，\cs{baselineskip}内的伸展或收缩被忽略。
%    \begin{macrocode}
  \parskip=.5\baselineskip plus 2pt\relax
\else
%    \end{macrocode}
%    Otherwise set it to the specified value:

% 否则将其设置为指定的值：
% \changes{v2.0c}{2019/02/16}{Support calc by using \cs{setlength}
%                             for assignments}
%    \begin{macrocode}
  \setlength\parskip\parskip@skip
\fi
%    \end{macrocode}
%    Setting \cs{parfillskip} was suggested by Donald Arseneau at some
%    point on comp.text.tex:

% Donald Arseneau 在某些时候在comp.text.tex上建议设置\cs{parfillskip}：
%    \begin{macrocode}
\setlength\parfillskip\parskip@parfill
\advance\parfillskip 0pt plus 1fil\relax
%    \end{macrocode}
%    \cs{parindent} gets whatever was specified. If the key was given
%    without an option this will essentially reassign the now ``current'' value.

% 如果没有指定选项，则\cs{parindent}将获得任何指定的值。这实际上将重新分配当前值。
%    \begin{macrocode}
\setlength\parindent\parskip@indent
%    \end{macrocode}
%
%
%
% \subsection{Handling document elements\\处理文档元素}
%
% Setting up a non-zero \cs{parskip} has some side-effects in document
% elements such as lists or headings etc. Here we try to keep these
% side-effects somewhat under control.

% 设置非零的\cs{parskip}会对列表或标题等文档元素产生一些副作用。在这里，我们尽量控制这些副作用。
%
% We make use of the \pkg{etoolbox} package to do patching.

% 我们使用\pkg{etoolbox}宏包进行修补。
%    \begin{macrocode}
\RequirePackage{etoolbox}
%    \end{macrocode}
%
% \subsubsection{Lists\\列表}
%
%    To accompany this, the vertical spacing in the list environments is changed
%    to use the same as \cs{parskip} in all relevant places (for
%    \cs{normalsize} only), i.e.

% 为了配合这一点，列表环境中的垂直间距更改为在所有相关位置（仅针对\cs{normalsize}）使用与\cs{parskip}相同的间距，即

%\begin{verbatim}
%   \parsep = \parskip
%   \itemsep = \z@ % add nothing to \parskip between items
%   \topsep = \z@ % add nothing to \parskip before first item
%\end{verbatim}
%
%    However, if the user explicitly asked for a zero parskip (via the
%    \option{skip} option) we
%    shouldn't do this but rather keep the default list settings, so
%    we better check for this.
%
% 然而，如果用户通过\option{skip}选项明确要求零段落间距，则我们不应这样做，而应保留默认的列表设置，因此我们最好检查一下。
%    \begin{macrocode}
\ifdim \parskip > 0pt
%    \end{macrocode}
%    
%    \begin{macrocode}
  \def\@listI{\leftmargin\leftmargini
     \topsep\z@ \parsep\parskip \itemsep\z@}
  \let\@listi\@listI
  \@listi
%    \end{macrocode}
%    
%    \begin{macrocode}
  \def\@listii{\leftmargin\leftmarginii
     \labelwidth\leftmarginii\advance\labelwidth-\labelsep
     \topsep\z@ \parsep\parskip \itemsep\z@}
%    \end{macrocode}
%    
%    \begin{macrocode}
  \def\@listiii{\leftmargin\leftmarginiii
      \labelwidth\leftmarginiii\advance\labelwidth-\labelsep
      \topsep\z@ \parsep\parskip \itemsep\z@}
%     
% and finally ...
%   \partopsep = \z@ % don't even add anything before first item (beyond 
%                    % \parskip) even if the list is preceded by a blank line
  \partopsep=\z@
\fi
%    \end{macrocode}
%
%
% \subsubsection{TOCs and similar lists\\目录和类似列表}
%
% Within a table of contents or a list of figures we don't want any
% additional vertical spacing just because the individual lines in
% such a list are implemented as one-line paragraphs. So we locally
% set the \cs{parskip} to zero by default. Should be really something that is
% done already in \LaTeX{}.

%在目录或图表清单中，我们不想因为这样一个列表中的每行都是一行段落而有任何额外的垂直间距。因此，我们默认将 \cs{parskip} 局部设置为零。这应该是在 \LaTeX{} 中已经实现的东西。

% \changes{v2.0e}{2020/05/19}{Fix space at start of \cs{@starttoc} (gh/12)}
%    \begin{macrocode}
\patchcmd\@starttoc
    {\begingroup \makeatletter}
    {\begingroup \makeatletter
%    \end{macrocode}
%    Just setting \cs{parskip} to zero as it was done in the original
%    version of the package, does not always work. If the list starts
%    out with an ordinary paragraph (and not with \cs{addvspace} as it
%    usually does) we will get a zero \cs{parskip} but the heading
%    above assumes we get the normal \cs{parskip} and has therefore
%    removed that amount from its own vertical skip. As long as the
%    parskip value is not too large people didn't notice that heading
%    and list moved closer to each other but if you use, say,
%    \texttt{[skip=20pt]} you will even see an overlap.

% 但是，就像在包的原始版本中所做的一样，只是将 \cs{parskip} 设置为零并不总是有效的。如果列表以普通段落开头（而不是通常使用的 \cs{addvspace}），我们将获得零的 \cs{parskip}，但上面的标题假定我们获得正常的 \cs{parskip}，因此已经从自己的垂直跳过中删除了该量。只要段落距离不太大，人们就不会注意到标题和列表彼此移动，但是如果您使用，例如，\texttt{[skip=20pt]}，您甚至会看到重叠。


%
%    We therefore do the following: we look at the last skip, undo it
%    and then issue a skip that is equal to \cs{parskip} +
%    \cs{lastskip}.
%     This way the skip seen by any following code has the right value
%    which is important for \cs{addvspace} calulations. Only then we
%    locally set \cs{parskip} to zero or rather to
%    \cs{parskip@tocskip}, the parameter that the user can set through
%    an option.
%
%因此，我们执行以下操作：我们查看最后一个跳过，撤消它，然后发出一个等于 \cs{parskip} + \cs{lastskip} 的跳过。这样，任何随后的代码看到的跳过都具有正确的值，这对于 \cs{addvspace} 计算非常重要。然后，我们将 \cs{parskip} 局部设置为零或者更确切地说，设置为用户可以通过选项设置的参数 \cs{parskip@tocskip}。

% \changes{v2.0e}{2020/05/19}{Add \texttt{tocskip} option}
%    \begin{macrocode}
      \skip@\lastskip
      \advance\skip@\parskip
      \vskip-\lastskip
      \vskip\skip@
      \parskip\parskip@tocskip}
    {}{\typeout{Couldn't patch \string\@starttoc}}
%    \end{macrocode}
%
%
%
%
% \subsubsection{Standard headings}
%
%  For the same reason we don't want to see an additional \cs{parskip}
% being added before and after a display heading, so we subtract its
% value (in two places):

%同样的原因，我们不想在显示标题前后添加额外的 \cs{parskip}，因此我们减去了它的值（在两个地方）。

%    \begin{macrocode}
\patchcmd\@startsection
    {\addvspace\@tempskipa}
    {\advance\@tempskipa-\parskip\addvspace\@tempskipa}
    {}{\typeout{Couldn't patch \string\@startsection}}
%    \end{macrocode}
%
%    \begin{macrocode}
\patchcmd\@xsect
    {\vskip\@tempskipa}
    {\advance\@tempskipa-\parskip\vskip\@tempskipa}
    {}{\typeout{Couldn't patch \string\@xsect}}
%    \end{macrocode}
%
%
%
%
% \subsubsection{\pkg{titlesec} headings\\\pkg{titlesec} 标题}
%
% If \pkg{titlesec} is used then headings are built using different
% commands and we have to cancel the \cs{parskip} there. The principle
% is the same. Of course, the patching should only happen if that
% package really got loaded, so we defer it to the start of the
% document and test for it:

% 如果使用 \pkg{titlesec} 包，则标题将使用不同的命令构建，因此我们必须在那里取消 \cs{parskip}。原则是相同的。当然，只有在确实加载了该软件包时，我们才应该进行修补，因此我们将其推迟到文档的开头并进行测试：

%    \begin{macrocode}
\AtBeginDocument{%    
\ifx\ttl@straight@ii\@undefined\else  % titlesec got loaded
\patchcmd\ttl@straight@ii
    {\addvspace{\@tempskipa}}%
    {\advance\@tempskipa-\parskip \addvspace\@tempskipa}%
    {}{\typeout{Couldn't patch \string\ttl@straight@ii}}%
\patchcmd\ttl@straight@ii
    {\vspace{\@tempskipb}}%
    {\advance\@tempskipb-\parskip \vspace\@tempskipb}%
    {}{\typeout{Couldn't patch \string\ttl@straight@ii}}%
\patchcmd\ttl@part@ii
    {\vspace*{\@tempskipa}}%
    {\advance\@tempskipa-\parskip \vspace*\@tempskipa}%
    {}{\typeout{Couldn't patch \string\ttl@part@ii}}%
\patchcmd\ttl@part@ii
    {\vspace{\@tempskipb}}%
    {\advance\@tempskipb-\parskip \vspace\@tempskipb}%
    {}{\typeout{Couldn't patch \string\ttl@part@ii}}%
\patchcmd\ttl@page@ii
    {\vspace*{\@tempskipa}}%
    {\advance\@tempskipa-\parskip \vspace*\@tempskipa}%
    {}{\typeout{Couldn't patch \string\ttl@page@ii}}%
\patchcmd\ttl@page@ii
    {\vspace{\@tempskipb}}%
    {\advance\@tempskipb-\parskip \vspace\@tempskipb}%
    {}{\typeout{Couldn't patch \string\ttl@page@ii}}%
\fi}    
%    \end{macrocode}
%
%
%
% \subsubsection{\pkg{amsthm} theorems\\\pkg{amsthm} 定理}
%
% The \pkg{amsthm} package is one of the few packages that make an
% explicit correction for \cs{parskip} which isn't any longer adequate
% if this \pkg{parskip} package is loaded. We therefore remove that
% setting from the package if it was loaded.

% \pkg{amsthm} 包是为数不多的对 \cs{parskip} 进行明确修正的软件包之一，如果加载了此 \pkg{parskip} 包，则不再适用。因此，如果已加载该软件包，则从该软件包中删除该设置。


% \changes{v2.0b}{2018/09/17}{Support \cs{amsthm} (sx/450551)}
%    \begin{macrocode}
\AtBeginDocument{%    
\ifx\deferred@thm@head\@undefined\else  % amsthm got loaded
\patchcmd\deferred@thm@head
  {\addvspace{-\parskip}}{}%
  {}{\typeout{Couldn't patch \string\deferred@thm@head!}}%
\fi} 
%    \end{macrocode}
%
%
% \subsection{Closing shop}
%

%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% \Finale
%
\endinput
