在某些情况下，\pkg{minted} 可能由于其他文档设置而无法达到所期望的效果，这些设置是它无法控制的。下面列出了常见问题及解决方法或解决方案。如果您正在使用 \pkg{minted} 进行非典型上下文的工作，您也可以搜索 \href{http://tex.stackexchange.com/}{tex.stackexchange.com} 或在那里提问。

% In some cases, \pkg{minted} may not give the desired result due to other document settings that it cannot control.  Common issues are described below, with workarounds or solutions.  You may also wish to search \href{http://tex.stackexchange.com/}{tex.stackexchange.com} or ask a question there, if you are working with \pkg{minted} in a non-typical context.
%
% \begin{itemize}
\item \textbf{有时会出现“无法写入文件”的错误。} 这可能是由于在与 Dropbox 或类似的文件同步程序同步的目录中使用 \pkg{minted} 引起的。这些程序可能在它仍需要修改它们的时候尝试同步 \pkg{minted} 的临时文件。解决方案是关闭文件同步或使用未同步的目录。
\\\textbf{There are intermittent ``I can't write on file'' errors.}  This can be caused by using \pkg{minted} in a directory that is synchronized with Dropbox or a similar file syncing program.  These programs can try to sync \pkg{minted}'s temporary files while it still needs to be able to modify them.  The solution is to turn off file syncing or use a directory that is not synced.

\item \textbf{我收到“Font Warning: Some font shapes were not available”消息，或者粗体或斜体似乎丢失了。} 这是由于当前用于排版代码的字体的限制。在某些情况下，\LaTeX\ 默认替换的字体形状是完全足够的，可以忽略警告。在其他情况下，字体替换可能不清楚地指示粗体或斜体文本，您需要切换到不同的字体。请参见 \LaTeX\ 字体目录中关于\href{http://www.tug.dk/FontCatalogue/typewriterfonts.html}{打字机字体}的部分，了解替代方案。如果您喜欢默认的 \LaTeX\ 字体，则 \pkg{lmodern} 包是一个很好的起点。\pkg{beramono} 和 \pkg{courier} 包也是不错的选择。
%\\ \textbf{I receive a ``Font Warning:  Some font shapes were not available'' message, or bold or italic seem to be missing.}  This is due to a limitation in the font that is currently in use for typesetting code.  In some cases, the default font shapes that \LaTeX\ substitutes are perfectly adequate, and the warning may be ignored.  In other cases, the font substitutions may not clearly indicate bold or italic text, and you will want to switch to a different font.  See The \LaTeX\ Font Catalogue's section on \href{http://www.tug.dk/FontCatalogue/typewriterfonts.html}{Typewriter Fonts} for alternatives.  If you like the default \LaTeX\ fonts, the \pkg{lmodern} package is a good place to start.  The \pkg{beramono} and \pkg{courier} packages may also be good options.

\item \textbf{在使用缓存时，在 OS X 下出现“Too many open files”错误。} 请参见第~\ref{sec:basic:preliminary} 节中关于 OS X 的说明。
% \\ \textbf{I receive a ``Too many open files'' error under OS X when using caching.}  See the note on OS X under Section~\ref{sec:basic:preliminary}.

\item \textbf{TeXShop 找不到 \texttt{pygmentize}。} 您可能需要创建一个符号链接。请参见 \url{https://tex.stackexchange.com/questions/279214}。
% \\ \textbf{TeXShop can't find \texttt{pygmentize}.}  You may need to create a symlink.  See \url{https://tex.stackexchange.com/questions/279214}.

\item \textbf{当我使用 \pkg{fancybox} 宏包时，会出现一些奇怪的事情。} \pkg{fancybox} 与 \pkg{minted} 内部使用的 \pkg{fancyvrb} 冲突。在使用 \pkg{fancybox} 时，请确保在加载 \pkg{minted}（或在未由 \pkg{minted} 加载 \pkg{fancyvrb} 的情况下，在加载 \pkg{fancyvrb} 之前）之前加载。
% \\ \textbf{Weird things happen when I use the \pkg{fancybox} package.}  \pkg{fancybox} conflicts with \pkg{fancyvrb}, which \pkg{minted} uses internally.  When using \pkg{fancybox}, make sure that it is loaded before \pkg{minted} (or before \pkg{fancyvrb}, if \pkg{fancyvrb} is not loaded by \pkg{minted}).

\item \textbf{当我在使用KOMA-Script文档类时，使用\pkg{minted}会提示关于\texttt{\string\float@addtolists}的警告。} \pkg{minted}使用\pkg{float}宏包生成浮动列表，但这与KOMA-Script生成浮动对象的方式冲突。解决方法是加载\pkg{scrhack}宏包或使用\pkg{minted}的|newfloat|选项。
% \\ \textbf{When I use \pkg{minted} with KOMA-Script document classes, I get warnings about \texttt{\string\float@addtolists}.}  \pkg{minted} uses the \pkg{float} package to produce floated listings, but this conflicts with the way KOMA-Script does floats.  Load the package \pkg{scrhack} to resolve the conflict.  Or use \pkg{minted}'s |newfloat| package option.

\item \textbf{Tilde字符（\texttt{\string~}）被抬高，几乎像上标。} 这是字体的问题。你需要使用不同的字体编码，可能是使用不同的字体。尝试使用|\usepackage[T1]{fontenc}|，也许搭配|\usepackage{lmodern}|或类似的宏包。
% \\ \textbf{Tilde characters \texttt{\string~} are raised, almost like superscripts.}
% This is a font issue.  You need a different font encoding, possibly with a different font.  Try |\usepackage[T1]{fontenc}|, perhaps with |\usepackage{lmodern}|, or something similar.
%
\item \textbf{使用数学公式时出现错误，比如出现\texttt{TeX capacity exceeded}和\texttt{\string\leavevmode \string\kern \string\z@}。} 这是由于公式内容中禁用了连字号造成的。请查看|escapeinside|下的注意事项。
% \\ \textbf{I'm getting errors with math, something like \texttt{TeX capacity exceeded} and \texttt{\string\leavevmode \string\kern \string\z@}.}  This is due to ligatures being disabled within verbatim content.  See the note under |escapeinside|.
%
\item \textbf{在使用\pkg{breqn}等特殊数学宏包时，使用\texttt{mathescape}会导致文档无法完成编译，或出现其他意外结果。} 一些数学宏包（如\pkg{breqn}）会给逗号等字符赋予数学模式下的特殊含义，这可能与\pkg{minted}发生冲突。在\pkg{breqn}和逗号的情况下，可以通过在|minted|环境中重新定义逗号来解决问题：
\\ \textbf{With \texttt{mathescape} and the \pkg{breqn} package (or another special math package), the document never finishes compiling or there are other unexpected results.}  Some math packages like \pkg{breqn} give certain characters like the comma special meanings in math mode.  These can conflict with \pkg{minted}.  In the \pkg{breqn} and comma case, this can be fixed by redefining the comma within |minted| environments:
%\begin{verbatim}
%\AtBeginEnvironment{minted}{\catcode`\,=12\mathcode`\,="613B}
%\end{verbatim}
其他宏包或特殊字符可能需要自己的修改。

%Other packages/special characters may need their own modifications.
%

\item \textbf{在使用Beamer时出现错误。} 由于Beamer的处理方式，你可能需要在包含\pkg{minted}命令和环境的幻灯片上使用|fragile|或|fragile=singleslide|选项。|fragile=singleslide|效果最好，但它禁用了叠加。|fragile|通过将每个幻灯片的内容保存到临时文件中再重复使用，这种方法允许使用叠加，但如果你在一行的开头有字符串|\end{frame}|（例如在|minted|环境中），它将会出错。为解决这个问题，可以将环境的内容缩进（以便|\end{frame}|前面有一个或多个空格），然后使用|gobble|或|autogobble|选项来删除缩进。
\\ \textbf{I'm getting errors with Beamer.}  Due to how Beamer treats verbatim content, you may need to use either the |fragile| or |fragile=singleslide| options for frames that contain \pkg{minted} commands and environments.  |fragile=singleslide| works best, but it disables overlays.  |fragile| works by saving the contents of each frame to a temp file and then reusing them.  This approach allows overlays, but will break if you have the string |\end{frame}| at the beginning of a line (for example, in a |minted| environment).  To work around that, you can indent the content of the environment (so that the |\end{frame}| is preceded by one or more spaces) and then use the |gobble| or |autogobble| options to remove the indentation.
%

\item \textbf{Beamer会吞掉制表符。} 这是由于\href{https://bitbucket.org/rivanvx/beamer/issue/310/tab-characters-in-listings-lost-when-using}{Beamer在处理抄录内容时存在错误}。请升级Beamer或使用链接的补丁。否则，如果您不需要覆盖图层，请尝试使用|fragile=singleslide|，或考虑使用\cmd\inputminted，或将制表符转换为空格。
\\ \textbf{Tabs are eaten by Beamer.}  This is due to \href{https://bitbucket.org/rivanvx/beamer/issue/310/tab-characters-in-listings-lost-when-using}{a bug in Beamer's treatment of verbatim content}.  Upgrade Beamer or use the linked patch.  Otherwise, try |fragile=singleslide| if you don't need overlays, or consider using \cmd\inputminted\ or converting the tabs into spaces.
%
\item \textbf{我正在尝试创建几个新的\pkg{minted}命令/环境，并希望它们都具有相同的设置。我将设置保存在一个宏中，然后在定义命令/环境时使用该宏。但它失败了。}
这是由于\pkg{keyval}的工作方式（\pkg{minted}使用它来管理选项）所致。参数不会被扩展。有关更多信息，请参见\href{http://tex.stackexchange.com/questions/13563/building-keyval-arguments-using-a-macro/13564#13564}{此处}和\href{http://tex.stackexchange.com/questions/145363/why-does-includegraphics-varone-vartwo-not-compile/145366#145366}{此处}。仍然可以实现您想要的功能；您只需在传递给创建新命令/环境的命令之前扩展选项宏即可。下面是一个示例。|\expandafter|是至关重要的部分。
\\ \textbf{I'm trying to create several new \pkg{minted} commands/environments, and want them all to have the same settings.  I'm saving the settings in a macro and then using the macro when defining the commands/environments.  But it's failing.}
% This is due to the way that \pkg{keyval} works (\pkg{minted} uses it to manage options). Arguments are not expanded. See \href{http://tex.stackexchange.com/questions/13563/building-keyval-arguments-using-a-macro/13564#13564}{this} and \href{http://tex.stackexchange.com/questions/145363/why-does-includegraphics-varone-vartwo-not-compile/145366#145366}{this} for more information.  It is still possible to do what you want; you just need to expand the options macro before passing it to the commands that create the new commands/environments.  An example is shown below.  The |\expandafter| is the vital part.
%\begin{verbatim}
%\def\args{linenos,frame=single,fontsize=\footnotesize,style=bw}
%
%\newcommand{\makenewmintedfiles}[1]{%
%  \newmintedfile[inputlatex]{latex}{#1}%
%  \newmintedfile[inputc]{c}{#1}%
%}
%
%\expandafter\makenewmintedfiles\expandafter{\args}
%\end{verbatim}
%

\item \textbf{我想在通常不允许使用抄录内容的上下文中使用\texttt{\string\mintinline}。}
|\mintinline|命令已经可以在许多不允许使用普通抄录命令（如|\verb|）的地方使用，因此请先尝试。如果不起作用，则最简单的替代方法之一是将代码保存在一个盒子中，然后稍后使用它。例如，
\\ \textbf{I want to use \texttt{\string\mintinline} in a context that normally doesn't allow verbatim content.}
% The |\mintinline| command will already work in many places that do not allow normal verbatim commands like |\verb|, so make sure to try it first.  If it doesn't work, one of the simplest alternatives is to save your code in a box, and then use it later.  For example,
%\begin{verbatim}
%\newsavebox\mybox
%\begin{lrbox}{\mybox}
%\mintinline{cpp}{std::cout}
%\end{lrbox}
%
%\commandthatdoesnotlikeverbatim{Text \usebox{\mybox}}
%\end{verbatim}
%

\item \textbf{在\pkg{minted}命令和环境内无法使用扩展字符，即使使用了\pkg{inputenc}宏包也不行。} 版本2.0增加了对pdfTeX引擎下扩展字符的支持。但是，如果需要使用\pkg{inputenc}不支持的字符，则应使用XeTeX或LuaTeX引擎。
\\ \textbf{Extended characters do not work inside \pkg{minted} commands and environments, even when the \pkg{inputenc} package is used.}
% Version 2.0 adds support for extended characters under the pdfTeX engine.  But if you need characters that are not supported by \pkg{inputenc}, you should use the XeTeX or LuaTeX engines instead.
%

\item \textbf{\pkg{polyglossia}宏包对代码进行了一些不必要的更改。（例如，在法语中在冒号周围添加额外的空格。）} 您可能需要将代码放在|\begin{english}...\end{english}|中。这可以在导言区使用\pkg{etoolbox}为所有|minted|环境完成：
\\ \textbf{The \pkg{polyglossia} package is doing undesirable things to code. (For example, adding extra space around colons in French.)}  You may need to put your code within |\begin{english}...\end{english}|.  This may done for all |minted| environments using \pkg{etoolbox} in the preamble:
% \begin{verbatim}
%\usepackage{etoolbox}
%\BeforeBeginEnvironment{minted}{\begin{english}}
%\AfterEndEnvironment{minted}{\end{english}}
% \end{verbatim}
%
\item \textbf{制表符被转换为字符序列\texttt{\string^\string^I}}。这发生在使用XeLaTeX时。您需要使用|-8bit|命令行选项，以便制表符可以正确地写入临时文件。有关XeLaTeX处理制表符的更多信息，请参见\url{http://tex.stackexchange.com/questions/58732/how-to-output-a-tabulation-into-a-file}。
\\ \textbf{Tabs are being turned into the character sequence \texttt{\string^\string^I}}.
% This happens when you use XeLaTeX.  You need to use the |-8bit| command-line option so that tabs may be written correctly to temporary files.  See \url{http://tex.stackexchange.com/questions/58732/how-to-output-a-tabulation-into-a-file} for more on XeLaTeX's handling of tab characters. 
%
\item \textbf{\pkg{caption}宏包在与\pkg{minted}一起使用\texttt{\string\captionof}和其他命令时会产生错误。} 使用选项|compatibility=false|加载\pkg{caption}宏包。或者更好的方法是使用\pkg{minted}的|newfloat|包选项，这提供了更好的\pkg{caption}兼容性。
\\ \textbf{The \pkg{caption} package produces an error when \texttt{\string\captionof} and other commands are used in combination with \pkg{minted}.}
% Load the \pkg{caption} package with the option |compatibility=false|.  Or better yet, use \pkg{minted}'s |newfloat| package option, which provides better \pkg{caption} compatibility.
%
\item \textbf{我需要一个支持分页的列表环境。} 内置的列表环境是标准浮动体，不支持分页。您可能需要为长浮动体定义一个新环境。例如，
\\ \textbf{I need a listing environment that supports page breaks.}  The built-in listing environment is a standard float; it doesn't support page breaks.  You will probably want to define a new environment for long floats.  For example, 
%\begin{verbatim}
%\usepackage{caption}
%\newenvironment{longlisting}{\captionsetup{type=listing}}{}
%\end{verbatim}
使用\pkg{caption}宏包时，最好使用\pkg{minted}的|newfloat|包选项。有关带有分页的|listing|环境的更多信息，请参见\url{http://tex.stackexchange.com/a/53540/10742}。



% With the \pkg{caption} package, it is best to use \pkg{minted}'s |newfloat| package option.  See \url{http://tex.stackexchange.com/a/53540/10742} for more on |listing| environments with page breaks.
%

\item \textbf{我想使用自定义脚本/可执行文件来访问Pygments，而不是|pygmentize|。} 重新定义|\MintedPygmentize|：
\\ \textbf{I want to use a custom script/executable to access Pygments, rather than |pygmentize|.}  Redefine |\MintedPygmentize|:
%\begin{verbatim}
%\renewcommand{\MintedPygmentize}{...}
%\end{verbatim}
%

\item \textbf{我想使用命令行选项\texttt{-output-directory}或MiKTeX的\texttt{-aux-directory}，但是出现了错误。}使用包选项|outputdir|来指定输出目录的位置。不幸的是，\pkg{minted}无法自动检测输出目录的位置。
\\ \textbf{I want to use the command-line option \texttt{-output-directory}, or MiKTeX's \texttt{-aux-directory}, but am getting errors.}  Use the package option |outputdir| to specify the location of the output directory.  Unfortunately, there is no way for \pkg{minted} to detect the output directory automatically.
%
\item \textbf{我想在帧标签中使用扩展字符，但是出现了错误。} 这可能是由于\pkg{minted}<2.0和Python 2.7中的\href{https://bitbucket.org/birkenfeld/pygments-main/issue/801/python-2-fails-to-detect-terminal-encoding}{Pygments终端编码问题}导致的。它应该可以与任何版本的Python与\pkg{minted} 2.0+一起使用，因为它会在内部处理标签并将其发送到Python。
\\ \textbf{I want extended characters in frame labels, but am getting errors.}  This can happen with \pkg{minted} <2.0 and Python 2.7, due to a \href{https://bitbucket.org/birkenfeld/pygments-main/issue/801/python-2-fails-to-detect-terminal-encoding}{terminal encoding issue with Pygments}.  It should work with any version of Python with \pkg{minted} 2.0+, which processes labels internally and does not send them to Python.

\item \textbf{\texttt{minted}环境在\texttt{tabular}内部具有额外的垂直空间。}可以\href{https://github.com/gpoore/minted/issues/82}{创建自定义环境}来消除额外的空间。但是，在存在相邻文本的情况下表现符合预期的一般解决方案仍有待发现。
\\ \textbf{\texttt{minted} environments have extra vertical space inside \texttt{tabular}.}  It is possible to \href{https://github.com/gpoore/minted/issues/82}{create a custom environment} that eliminates the extra space.  However, a general solution that behaves as expected in the presence of adjacent text remains to be found.

\item \textbf{我收到来自\texttt{lineno.sty}的警告，提示“Command \texttt{\string@parboxrestore} has changed.”} 当在\pkg{csquotes}之后加载\pkg{minted}时，可能会发生这种情况。尝试先加载\pkg{minted}。如果您在不使用\pkg{csquotes}时收到此消息，则可能需要尝试加载包的顺序，并可能还要打开问题。
\\ \textbf{I'm receiving a warning from \texttt{lineno.sty} that ``Command \texttt{\string\@parboxrestore} has changed.''}  This can happen when \pkg{minted} is loaded after \pkg{csquotes}.  Try loading \pkg{minted} first.  If you receive this message when you are not using \pkg{csquotes}, you may want to experiment with the order of loading packages and might also open an issue.

\item \textbf{我正在使用\app{texi2pdf}，并且从\app{tar}收到“Cannot stat”错误：}这是由于\app{texi2pdf}处理临时文件的方式。 \pkg{minted}会自动清理其临时文件，但是\app{texi2pdf}会认为在运行结束时任何曾经创建的临时文件仍然存在，因此尝试访问\pkg{minted}已删除的文件。可以通过在|\usepackage{minted}|之后添加|\renewcommand{\DeleteFile}[2][]{}|来禁用\pkg{minted}的临时文件清理。
\\ \textbf{I'm using \app{texi2pdf}, and getting ``Cannot stat'' errors from \app{tar}}:  This is due to the way that \app{texi2pdf} handles temporary files.  \pkg{minted} automatically cleans up its temporary files, but \app{texi2pdf} assumes that any temporary file that is ever created will still exist at the end of the run, so it tries to access the files that \pkg{minted} has deleted. It's possible to disable minted's temp file cleanup by adding |\renewcommand{\DeleteFile}[2][]{}| after the |\usepackage{minted}|.
% \end{itemize}
%
%
%
%
% \section*{Acknowledgements\\致谢}
% \addcontentsline{toc}{section}{Acknowledgements}
%
\textbf{Konrad Rudolph：}特别感谢Philipp Stephani和其他来自\texttt{comp.text.tex}和\texttt{tex.stackexchange.com}的人员。

% \textbf{Konrad Rudolph:}  Special thanks to Philipp Stephani and the rest of the guys from \texttt{comp.text.tex} and \texttt{tex.stackexchange.com}.
%
% \textbf{Geoffrey Poore:}
% \begin{itemize}
% \item Thanks to Marco Daniel for the code on \url{tex.stackexchange.com} that inspired automatic line breaking.
% \item Thanks to Patrick Vogt for improving TikZ externalization compatibility.
% \item Thanks to \textsf{@muzimuzhi} for assistance with GitHub issues.
% \item Thanks to \textsf{@jfbu} for suggestions and discussion regarding support for arbitrary Pygments style names (\#210, \#294, \#299, \#317), and for debugging assistance.
% \end{itemize}
%
% \PrintChangelog
%
% \StopEventually{} %\StopEventually{\PrintIndex}