% \footnotelayout{m}
% \columnratio{}
% \section{Reference Manual\\参考手册}
% \label{sec:ref}
% 
% \KeepSpace{6}
% \subsection{用于着色文本和列分隔线的命令\\ Commands for Coloring Texts and Column-Separating Rules}
% \label{sec:ref-tcolor}
% \changes{v1.3-3}{2013/09/17}
%	{Rename the sub-sectoin title from ``Commands for Text Coloring'' to
%	 ``Commands for Coloring Texts and Column-Separating Rules'' to
%	 add description of the rule coloring together with the rule
%	 drawing itself.}
% 
% \begin{description}
% \item[\Midx{\!\columncolor!}\oarg{mode}\marg{color}\oarg{col}]\mbox{}
% \Item[\Midx{\!\normalcolumncolor!}\oarg{col}]\mbox{}\par
% \changes{v1.2-1}{2013/05/11}
%	{Add description of \cs{columncolor} and \cs{normlcolumncolor}.}
% 
% The command \!\columncolor! declares that the \emph{default color} of a
% column is \meta{color} or what it specifies by the combination with the
% optional \meta{mode}.  The command \!\normalcolumncolor! declares the
% default color is what \!\normalcolor! specifies, i.e., black usually.  The
% target column of these commands is that in which the commands reside, or
% \meta{col} if it specified.

命令 \!\columncolor! 声明列的\emph{默认颜色}为\meta{color}，或者通过与可选的\meta{mode}组合指定的颜色。命令 \!\normalcolumncolor! 声明默认颜色为 \!\normalcolor! 指定的颜色，即通常为黑色。这些命令的目标列是包含命令的列，或者如果指定了\meta{col}，则为\meta{col}。
% \begin{itemize}
% \item
% The command may be outside of \env{paracol} environment.  If so and
% \meta{col} is not provided, the target column is the leftmost 0.
% 
该命令可以在\env{paracol}环境之外使用。如果是这样，并且未提供\meta{col}，则目标列是最左边的列0。
% \item
% The default color declaration is \emph{global}.  Therefore, even if the
% command appears in a \env{paracol} environment (and even in some grouping
% structure in it), the declaration will be kept effective after
% \Endparacol{} to determine the default color of the specified column in
% succeeding \env{paracol} environments.
% 
默认的颜色声明是\emph{全局的}。因此，即使该命令出现在\env{paracol}环境中（甚至在其中的某个分组结构中），该声明在\Endparacol{}之后仍将保持有效，以确定后续\env{paracol}环境中指定列的默认颜色。
% \item
% To give a color to texts (and maybe other stuff) in a column correctly,
% you need to load \textsf{color} package or its relative (e.g.,
% \textsf{xcolor}) which the implementation of coloring in \textsf{paracol}
% relies on.
% 
要正确给列中的文本（以及其他内容）着色，您需要加载\textsf{color}包或其相关包（例如\textsf{xcolor}），因为\textsf{paracol}中的着色实现依赖于它们。
% \item
% Coloring with \!\color!\oarg{mode}\marg{color} and other coloring commands
% in \env{paracol} environments is of course allowed.  One caution is that
% the \!\color! decides the color for following texts until other
% specification is given or the group surrounding the command is closed.
% Therefore, \!\switchcolumn! does not affect the coloring but a color given
% to the texts in a column is also applied to the texts in the column to be
% switched to.  This irrelativeness of coloring and \cswitch{} is shown in
% the example below.

当然可以在\env{paracol}环境中使用 \!\color!\oarg{mode}\marg{color} 和其他着色命令。一个注意事项是 \!\color! 决定了后续文本的颜色，直到给出其他规范或关闭命令周围的分组。因此， \!\switchcolumn! 不会影响着色，但对于给定列中的文本的颜色也会应用于要切换到的列中的文本。下面的示例展示了着色和\cswitch{}的无关性。
% 
% \twosided[]\columnratio{0.5}\columnsep0pt
% \tolerance5000\hbadness5000
% \begin{paracol}{2}
% \columncolor{blue}
% This column is colored blue because\\
本栏目被着色为蓝色，因为\\
% \mbox{}\qquad \!\columncolor!|{blue}|\\
% is specfied.  Here we have a \!\switchcolumn!.\\
指定了。接着有一个 \!\switchcolumn!命令。
% \switchcolumn
% \columncolor{red}
% This column is colored red because\\
本栏目被着色为红色，因为\\
% \mbox{}\qquad\!\columncolor!|{red}|\\
% is specified.\\
被指定了。
% 
% \begin{color}{green}
% Now the color of the right column is changed to green because\\
现在右栏的颜色被更改为绿色，因为\\
% \mbox{}\qquad\!\begin!|{color}{green}|\\
% is given prior to this paragraph.  Now we have another \!\switchcolumn! to
% go back to the left.
\\被指定了。现在我们有另一个 \!\switchcolumn!来返回到左侧。
% \switchcolumn
% The color of this paragraph is green because we are still in the
% environment of green coloring, which we are now closing.\par
这段文字的颜色是绿色的，因为我们仍然处于绿色着色的环境中，而现在我们正在关闭它。\par
% \end{color}%
% 
% Since the coloring environment has been closed, the color of this
% paragraph is the default blue.  Now we have yet another and the last
% \!\switchcolumn! to the right.\\
由于着色环境已关闭，这段文字的颜色是默认的蓝色。现在我们有另一个并且是最后一个 \!\switchcolumn! 向右切换。\\\
% \switchcolumn
% Since this paragraph is outside of the coloring environment, its color is
% the default red.
\\由于这段文字在着色环境之外，它的颜色是默认的红色。
% \end{paracol}
% 
% \normalcolumncolor[0]\normalcolumncolor[1]
% The default coloring of columns does not affect anything outside of
% \env{paracol} environment of course, and thus this sentence is not
% colored\footnote{
% 
% Or colored black as \cs{normalcolor} specifies.}.
% \end{itemize}
% 
% 
% 
% \KeepSpace{4}
% \item[\Midx{\!\coloredwordhyphenated!}]\mbox{}
% \Item[\Midx{\!\nocoloredwordhyphenated!}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{coloredwordhyphenated} and
%	 \cs{nocoloredwordhyphenated}.}
% 
% The command \!\coloredwordhyphenated! allows the first word following a
% coloring command such as \!\color! to be hyphenated, but at the same time
% make it possible that a line is broken before the word.  The command
% \!\nocoloredwordhyphenated! acts oppositely and thus line breaking before
% the first word and hyphenating it are inhibited.  By default,
% \!\coloredwordhyphenated! is effective.
% 
% \begin{itemize}
% \item
% The implementation of \textsf{color} package and its relatives makes it
% impossible that \meta{word} is hyphenated when it appears like
% |{|\!\color!|{red}|\meta{word} \ldots|}| or
% \!\textcolor!|{|\meta{word} \ldots|}|.  This inhibition of the hyphenation
% is sometimes annoying especially when the document is multi-columned and
% thus a line is narrow and a column is written in a language having long
% words such as German.  Therefore in \Paracol{} package, a trick is used to
% allow the \meta{word} is hyphenated.  However this trick being insertion
% of a null horizontal space has a side effect that the word can have a line
% break before it.  Though this line break is usually unharmful, in a
% special occasion the break is undesirable and
% in\textcolor{red}{appropriate} by making it possible that the
% \emph{half-colored} word `inappropriate' is broken between `in' and
% `appropriate' without hyphenation.  Therefore, if you find such a
% inappropriate break, use \!\nocoloredwordhyphenated! as follows, for example.
% \begin{quote}
% |{\nocoloredwordhyphenated in\textcolor{red}{appropriate}}|
% \end{quote}
% \end{itemize}
% 
% 
% \KeepSpace{4}
% \item[\Midx{\!\colseprulecolor!}\oarg{mode}\marg{color}\oarg{col}]\mbox{}
% \Item[\Midx{\!\normalcolseprulecolor!}\oarg{col}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{colseprulecolor} and
%	 \cs{normalcolseprulecolor}.}
% 
% The command \!\colseprulecolor! declares the color for
% {\em\Uidx\cseprule{}s}, being the vertical rules drawn at the center of
% gaps between columns, is \meta{color} or what it specifies by the
% combination with the optional \meta{mode}.  The command
% \!\normalcolseprulecolor! declares the color of rules is what
% \!\normalcolor! specifies, i.e., black usually.  If the optional argument
% \meta{col} is given, these commands specifies the color of the rule in the
% gap following the column whose ordinal is \meta{col}, rather than all rules.
% 
% \begin{itemize}
% \item
% The rules are drawn if \LaTeX's typesetting parameter \!\columnseprule!
% for the rule width has non-zero value, e.g., 0.4\,|pt| to obey the
% standard rule thickness.  The rules are \emph{not} drawn on \pwstuff{},
% i.e., \Preenv{} and \postenv, \pwise{} floats or (\mgfnote{} or
% non-merged) \Scfnote{}s of course but also \mctext{}s.  Therefore, if a
% page has \mctext{}s, the rules are {\em broken} by them as shown in the
% red rule example below.
% \global\unitlength\@totalleftmargin
% \end{itemize}
% \end{description}
% 
% \columnseprule0.4pt\colseprulecolor{red}[1]\colseprulecolor{white}[0]
% \setcolumnwidth{\unitlength/0pt}
% \begin{paracol}{3}\switchcolumn\noindent 
% This is a left column paragraph preceding a \mctext.  Of cource the rule
% separating this and the next column starts from the top of this paragraph.
% \switchcolumn\noindent
% This is a right column paragraph preceding a \mctext{} given by the
% \!\switchcolumn!|*| at its end.
% \switchcolumn[1]*[\subsubsection*{\hbox to\unitlength{}
% An Example of Spanning Text Given by \cs{subsubsection}|*| Command}]
% Since we have a \mctext{} above, the red rule separating this and the next
% column is broken by the text.
% \switchcolumn
% It is also natural that the rule separating this and the previous column is
% terminated at the end of this \env{paracol} environment.
% \end{paracol}
% \columnseprule0pt\columnratio{}
% 
% \begin{description}
% \Item[]\mbox{}
% \begin{itemize}
% \Item
% To give a color to rules correctly, you need to load \textsf{color}
% package or its relative (e.g., \textsf{xcolor}) which the implementation
% of coloring in \textsf{paracol} relies on.
% 
% \item
% Once you give a color to rules in a specific gap with the optional
% \meta{col}, another \!\colseprulecolor! or \!\normalcolseprulecolor!
% without \meta{col} does \emph{not} change the color of the rule in the
% gap.
% \end{itemize}
% \end{description}
% 
% 
% 
% \KeepSpace{7}
% \subsection{Commands for Background Painting}
% \label{sec:ref-bgpaint}
% \changes{v1.3-3}{2013/09/17}
%	{Add the sub-section ``Commands for Background Painting.}
% 
% \begin{description}
% \item[\Midx{\!\backgroundcolor!}\marg{region}\oarg{mode}\marg{color}]
%     \mbox{}\par
% \Item[\Midx{\!\backgroundcolor!}
%     \Arg{\meta{region}$|(|x_0|,|y_0|)|$}\oarg{mode}\marg{color}]
%     \mbox{}\par
% \Item[\Midx{\!\backgroundcolor!}
%     \Arg{\meta{region}$|(|x_0|,|y_0|)||(|x_1|,|y_1|)|$}
%     \oarg{mode}\marg{color}]
%     \mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{backgroundcolor}.}
% 
% The command declares that {\em\Uidx\bgpaint} of \meta{region} is performed
% with \meta{color} or what it specifies by the combination of the optional
% \meta{mode}.  The \meta{region} whose \bground{} is painted is one of the
% following.
% 
% \begin{description}
% \item[|c|\rm(\textit{olumn})] for all columns, or particular one if
% \meta{region} is |c|\oarg{col} to specify its ordinal \meta{col}.
% 
% \item[|g|\rm(\textit{ap})] for all gaps between columns, or particular one
% if \meta{region} is |g|\oarg{col} to specify the ordinal \meta{col} of the
% column preceding the gap.
% 
% \item[|s|\rm(\textit{panning})] for \mctext{}s.
% 
% \item[|f|\rm(\textit{loat})] for \pwise{} floats.
% 
% \item[|n|\rm(\textit{ote})] for (\mgfnote{} or non-merged) \Scfnote{}s.
% 
% \item[|p|\rm(\textit{re/post})] for \Preenv{} and \postenv.
% 
% \item[|t|\rm(\textit{op})] for top margin.
% 
% \item[|b|\rm(\textit{ottom})] for bottom margin.
% 
% \item[|l|\rm(\textit{eft})] for left margin.
% 
% \item[|r|\rm(\textit{ight})] for right margin.
% \end{description}
% 
% In addition, capitals of the keys above, i.e., |C|, |G|, \ldots, |L|, are
% also legitimate for {\em under painting}.  For example, you may specify to
% paint the \bground{} of a region, say top margin, by two
% \!\backgroundcolor! with |t| and |T| and with different color arranging the
% size of the region of either |t| or |T| (or both of them) by the
% \emph{\bgext} option shown below.
% 
% The optional $|(|x_0|,|y_0|)|$ is to enlarge the region to be painted
% shifting its left-top and right-bottom corner outside by
% the dimension $x_0$ horizontally and $y_0$ vertically, or to shrink it
% with negative dimensions.  This {\em\Uidx\bgext} can be asymmetric giving
% another optional $|(|x_1|,|y_1|)|$ so that it acts on the right-bottom
% corner while let $|(|x_0|,|y_0|)|$ shift only the left-top corner.
% Moreover, you may make each \bgext{} {\em infinite} by giving 10000\,|pt|
% (about 3.5\,m) to $x_0$, $y_0$, $x_1$ and/or $y_1$ so that the
% corresponding region edge is shifted to the paper edge.  Furthermore, this
% {\em\Uidx\bginfext{}} can be terminated at the point $\alpha$ inside the
% corresponding paper edge by giving $10000\,|pt|-\alpha$
% ($\alpha\leq1000\,|pt|$) to an extension parameter $x_0$, etc.
% 
% \begin{itemize}
% \item
% A region whose color is not specified is not painted and thus left blank
% (or kept as painted by \!\pagecolor! if you specify it).
% 
% \item
% Under-painting of columns and gaps by |C| and |G| is made for regions
% different from those over-painting |c| and |g|.  That is, under-painting
% is done ignoring all \pwstuff{} and thus the height of the regions is
% always $\!\textheight!+\!\maxdepth!$.  On the other hand, over-painting is
% only for chunks shrunk or separated by \pwstuff.
% 
% \item
% You may exploit the following painting order, where $x_i$
% is the $i$-th \mctext{} ($x\in\{|s|,|S|\}$) or $i$-th chunk followed by
% the $i$-th \mctext, $m$ and $n$ is the number of \mctext{}s and columns in
% a page respectively, to overlay a preceding region with a succeeding
% region, if your \emph{printer} allows overlaid color painting.
% 
% \begin{eqnarray*}
% |T|&\to&|B|\to|L|\to|R|
%     \to|G[|0|]|\to\cdots\to|G[|n{-}1|]|\to|C[|0|]|\to\cdots\to|C[|n{-}1|]|\\
% &\to&|t|\to|b|\to|l|\to|r|\to|N|\to|n|\to\{|F|,|P|\}\to\{|f|,|p|\}
%  \to|S|_1\to\cdots\to|S|_m\\
% &\to&|g|_1|[|0|]|\to\cdots|g|_1|[|n{-}2|]|\to
%      |c|_1|[|0|]|\to\cdots|c|_1|[|n{-}1|]|\to|s|_1\\
% &\to&\cdots\\
% &\to&|g|_m|[|0|]|\to\cdots|g|_m|[|n{-}2|]|\to
%      |c|_m|[|0|]|\to\cdots|c|_m|[|n{-}1|]|\to|s|_m\\
% &\to&|g|_{m+1}|[|0|]|\to\cdots|g|_{m+1}|[|n{-}2|]|\to
%      |c|_{m+1}|[|0|]|\to\cdots|c|_m|[|n{-}1|]|
% \end{eqnarray*}
% 
% \item
% If you specify |b| feature by \!\twosided!, \bgpaint{} is
% {\em\Uidx\mirror{}ed} in even-numbered pages so that |l| and |L| mean
% right margin, |r| and |R| mean left margin, and asymmetric extensions are
% applied to right-top and left-bottom corners.
% 
% \item
% To give a color for \bgpaint{} correctly, you need to load \textsf{color}
% package or its relative (e.g., \textsf{xcolor}) which the implementation
% of coloring in \textsf{paracol} relies on.
% 
% \item
% To paint margins and regions having infinite extension correctly, the
% parameters \!\paperwidth! and \!\paperheight! should be set properly by,
% for example, a paper selection option of \!\documentclass!.
% 
% \item
% Section~\ref{sec:bgpaint} shows examples of \bgpaint{} to give you more
% intutive explanations of \!\backgroundcolor! and its region specifications.
% \end{itemize}
% 
% 
% 
% \item[\Midx{\!\nobackgroundcolor!}\marg{region}]\mbox{}
% \Item[\Midx{\!\resetbackgroundcolor!}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{nobackgroundcolor} and
%	 \cs{resetbackgroundcolor}.}
% 
% The command \!\nobackgroundcolor! declares that the \bground{} of
% \meta{region} is not painted, where \meta{region} is one of legitimate
% region specifiers of \!\backgroundcolor!.  The command
% \!\resetbackgroundcolor! declares no regions are painted and thus gives
% you the default state.
% 
% \begin{itemize}
% \item
% If you specified the \bgpaint{} of |c|\oarg{col} or |g|\oarg{col} by
% \!\backgroundcolor!, the painting is \emph{not} canceled by
% \!\nobackgroundcolor! with |c| or |g| but without \oarg{col}.  Similarly,
% once you made declarations of \bgpaint{} of both |c| and |c|\oarg{col}
% (resp.\ |g| and |g|\oarg{col}), \!\nobackgroundcolor! with |c|\oarg{col}
% (resp.\ |g|\oarg{col}) cancels the painting of |c|\oarg{col} (resp.\
% |g|\oarg{col}) but the region will still be painted by the color you gave
% to |c| (resp.\ |g|).
% \end{itemize}
% 
% 
% 
% \item[\Midx{\!\pagerim!}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{pagerim}.}
% 
% This is a (kind of) \emph{length command}\footnote{
% 
% In reality, it is a \cs{dimen} register rather than a \cs{skip} register.}
% 
% to have the width of the \emph{rim} area placed at each paper edge to 
% inhibit \bgpaint{} in the area.  That is, the inner edges of the area are
% considered as virtual paper edges to block painting of all margins and
% regions having \bginfext{} to the edges, for example in order to
% avoid printing troubles caused by painting the rim area too close to the
% real paper edges.  The default value of \!\pagerim! is 0 to allow paint
% anywhere in a paper.
% \end{description}
% 
% 
% 
% \subsection{Control of Contents Output}
% \label{sec:ref-contents}
% 
% \begin{description}
% \item[\Midx{\!\addcontentsonly!}\marg{file}\marg{col}]\mbox{}\par
% The command inhibits the output of contents information to
% $\meta{file}\in\{|toc|,|lof|,|lot|\}$ from columns other than \meta{col}.
% 
% \begin{itemize}
% \item
% For example, this manual has \!\addcontentsonly!|{toc}{0}| to
% inhibit the contents information output from \!\subsection! commands
% in the right column in Section~\ref{sec:env} and~\ref{sec:float},
% or the table should have duplicated entries of sub-sections.
% 
% \item
% It must be $\meta{file}\in\{|toc|,|lof|,|lot|\}$, or you will have an
% error message of illegal type of contents file.
% \end{itemize}
% \end{description}
% 
% 
% 
% \subsection{Page Flushing Commands}
% \label{sec:ref-flush}
% 
% \begin{description}
% \item[\Midx{\!\flushpage!}]\mbox{}\par
% The command flushes pages up to the {\em\Uidx\tpage} in which the \lcolumn{}
% resides.  Deferred floats which can be put in the pages up to the \tpage{}
% are also flushed.
% 
% \item[\Midx{\!\clearpage!}]\mbox{}\par
% The command does what \!\flushpage! does and then flushes all floats still
% deferred if any.  The deferred float flushing beyond the \tpage{} takes
% place at first for \cwise{} ones creating \fcolumn{}s for them, and
% then for \pwise{} ones creating {\em\Uidx\fpage{}s} only with
% \pwise{} floats, as \LaTeX's \!\clearpage! does outside \env{paracol}
% environment.
% 
% \item[\Midx{\!\cleardoublepage!}]\mbox{}\par
% \changes{v1.3-5}{2013/09/17}
%	{Add description of \cs{cleardoublepage}.}
% The command does what \LaTeX's \!\cleardoublepage! does outside
% \env{paracol}.  That is, it does \!\clearpage! always and then leaves a
% blank page if it is even-numbered and two-sided |p|(age) feature is
% enabled by |twoside| option of \!\documentclass! or \Paracol's own
% \!\twosided! command shown in Section~\ref{sec:ref-twoside}.
% 
% \begin{itemize}
% \item
% This command is equivalent to \!\clearpage! in \env{paracol} environments
% for \npaired{} \parapag{}ing because \!\clearpage! flushes \emph{both}
% left and right \parapag{}es.
% \end{itemize}
% \end{description}
\endinput
