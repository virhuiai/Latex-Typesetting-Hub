% \footnotelayout{m}
% \columnratio{}
% \section{Reference Manual\\参考手册}
% \label{sec:ref}


% 
% \subsection{用于列和间隔宽度的命令\hfill Commands for Column and Gap Width}
% \label{sec:ref-colwidth}
% 
% \begin{description}
% \item[\Midx{\!\columnratio!}\Arg{$r_0,r_1,\cdots,r_k$}
%                              {|[|$r'_0,r'_1,\cdots,r'_{k'}$|]|}]\mbox{}\par
% \changes{v1.1}{2012/05/11}
% 	{Add description of \cs{columnratio}.}
% \changes{v1.3-2}{2013/09/17}
%	{Add descriptino of the optional argument of \cs{columnratio} for
%	 parallel-paging.}
% 
% The command defines the width of each column by the fraction $r_i$ to
% specify the portion which $i$-th ($i=0$ for the leftmost) column
% occupies.  More specifically, the width $\Midx{\w}_i$ of the $i$-th column
% is defined as follows, where $W$ is \!\textwidth!, $S$ is \!\columnsep!,
% and $n$ is the number of columns given to \beginparacol.

该命令通过分数$r_i$来定义每列的宽度，
以指定第$i$列（$i=0$表示最左边的列）所占的比例。
具体而言，第$i$列的宽度$\Midx{\w}_i$定义如下，
其中$W$是 \!\textwidth!，
$S$是 \!\columnsep!，
$n$是传递给 \beginparacol 的列数。
% \begin{eqnarray*}
% W'&=&W-(n-1)S\\
% w_i&=&\cases{
%   r_iW'
%     \vrule height1.5\ht\strutbox depth1.5\dp\strutbox width0pt&$i\leq k$\cr
%   \displaystyle{(1-\sum_{j=0}^k r_j)W'\over n-(k+1)}&$i>k$}
% \end{eqnarray*}
% 
% For a \env{paracol} environment with \parapag{}ing, $n$ is replaced with
% $n_l$ for the columns in left \parapag{}es, while $n$ and $w_i$ are
% replaced with $n_r$ and $w_{n_r+i}$ for those in right \parapag{}es.
% Moreover, if the optional argument having $r'_0,r'_1,\cdots,r'_{k'}$ is
% provided, $w_{n_r+i}$ for a column in right \parapag{}es is determined
% by $r'_i$ and $k'$ instead of $r_i$ and $k$.

% 对于具有\parapag{}分页的\env{paracol}环境，对于左侧\parapag{}的列，将$n$替换为$n_l$，而对于右侧\parapag{}的列，将$n$和$w_i$替换为$n_r$和$w_{n_r+i}$。此外，如果提供了具有$r'0,r'1,\cdots,r'{k'}$的可选参数，则右侧\parapag{}的列中的$w{n_r+i}$由$r'_i$和$k'$确定，而不是由$r_i$和$k$确定。
% \begin{itemize}
% \item
% The equations above imply that $k<n-1$, $r_i>0$ and $\sum_{j=0}^k
% r_j<1$.  If $k\geq n-1$, $k$ is assumed to be $n-2$ and all $r_i$ such
% that $i\geq n-1$ are ignored.  If $r_i$ or its sum does not satisfy the
% conditions, you will have an ugly result with ``Overfull'' messages.
% 
% 上述方程表明$k<n-1$，$r_i>0$且$\sum_{j=0}^k r_j<1$。如果$k\geq n-1$，则假设$k$为$n-2$，并忽略所有满足$i\geq n-1$的$r_i$。如果$r_i$或其总和不满足条件，你将得到一个带有“Overfull”消息的不美观的结果。
% \item
% The argument $r_0,r_1,\cdots,r_k$ can be empty to mean $k=-1$ to let all
% column widths be $W'/n$ as default.

% 参数$r_0,r_1,\cdots,r_k$可以为空，表示$k=-1$，使得所有列宽默认为$W'/n$。
% \item
% The setting of column width by the command takes effect in the |paracol|
% environments following the command\footnote{
% 
% If the command is in a \texttt{paracol} environment, the command does not
% affect the column widths of the environment but does the next ones, though
% such usage is very unusual.}.

% 该命令设置的列宽度在命令后的 |paracol| 环境中生效\footnote{如果该命令在 \texttt{paracol} 环境中，该命令不会影响环境的列宽度，而是影响后续的列宽度，尽管这种用法非常不常见。}。

% 
% Therefore, though placing the command in the preamble is the most natural
% way\footnote{
% 
% Or second most to not using it at all, of course.},
% 

% 因此，将该命令放在导言区是最自然的方式\footnote{
% 
% 当然，第二自然的方式是不使用它。}。

% you may place this command between two |paracol| environments to change
% the column layout for the second one even when they appear in a page as
% shown in Section~\ref{sec:man-close}.
% 
% 在两个|paracol|环境之间放置此命令，即可更改第二个环境的列布局，即使它们在页面中出现，如第~\ref{sec:man-close}节所示。

% \item
% \changes{v1.2-5}{2013/05/11}
% 	{Modify the description about \cs{linewidth} reflecting the fact
%	 that \string\texttt{paracol} may be included in a
%	 \string\texttt{list}-like environment.}
% 
% In the $i$-th column, \!\columnwidth! has $w_i$ and, for outermost
% paragraphs in the column, \!\hsize! has $w_i$ as well.  As for
% \!\linewidth!, it has $w_i-(\!\textwidth!-l)$ where $l$ is what
% \!\linewidth! had at \beginparacol{}, i.e., the \!\linewidth! for the
% \env{list}-like environment surrounding \env{paracol} if any, or
% \!\textwidth! otherwise.

% 在第$i$列中，\!\columnwidth! 的值为$w_i$，对于列中的最外层段落，\!\hsize!的值也为$w_i$。至于 \!\linewidth!，它的值为 $w_i-(\!\textwidth!-l)$，其中$l$是在\beginparacol{}中 \!\linewidth! 所具有的值，即如果有的话，是包围\env{paracol}的\env{list}-like环境的 \!\linewidth!，否则是 \!\textwidth!。
% 
% \item
% You can specify width of each column and that of each {\em gap} between
% two columns more detailedly by \!\setcolumnwidth! shown below.  If your
% document has both of \!\columnratio! and \!\setcolumnwidth! prior to a
% \env{paracol} environment, the command given later is effective for the
% environment.

% 您可以通过下面的 \!\setcolumnwidth! 更详细地指定每列的宽度和每两列之间的{\em 间隙}的宽度。如果在\env{paracol}环境之前的文档中同时存在 \!\columnratio! 和 \!\setcolumnwidth!，则后面给出的命令对该环境有效。
% \end{itemize}
% 
% 
% 
% \item[\Midx{\!\setcolumnwidth!}\Arg{$s_0,s_1,\cdots,s_k$}
%                              {|[|$s'_0,s'_1,\cdots,s'_{k'}$|]|}]\mbox{}\par
% \changes{v1.3-2}{2013/09/17}
%	{Add descriptino of \cs{setcolumnwidth}.}
% 
% The command defines the width of each column and that of each {\em gap}
% between two columns by the column/gap specification $s_i$ for the $i$-th
% column and the gap between it and the $(i{+}1)$-th column.  More
% specifically, $s_i$ has the form of $\hat w_i$ or $\hat w_i\,|/|\,\hat g_i$
% where each of $\hat w_i$ and $\hat g_i$ is a proper glue including a
% proper dimension, or an empty string to mean $\hat w_i=\!\fill!$ and $\hat
% g_i=\!\columnsep!$, to determine the width of $i$-th column $\w_i$ and that
% of $i$-th gap $\Midx{\gap}_i$ as follows, where $\mathit{nat}(x)$ is the
% natural width of the glue $x$, $\mathit{str}(x)$ is the infinite stretch
% factor of $x$, $W$ is \!\textwidth!, and $n$ is the number of columns
% given to \beginparacol.

% 该命令通过列/间隔规范$s_i$定义每个列和每个{\em 间隔}的宽度，其中$s_i$是第$i$列和它与$(i{+}1)$列之间的间隔。
具体来说，$s_i$的形式为$\hat w_i$或$\hat w_i,|/|,\hat g_i$，其中$\hat w_i$和$\hat g_i$都是包含适当尺寸的适当粘连，
或者是一个空字符串来表示 $\hat w_i=\!\fill!$ 和$\hat g_i=\!\columnsep!$，以确定第$i$列$\w_i$和第$i$个间隔$\Midx{\gap}_i$的宽度，
其中$\mathit{nat}(x)$是粘连$x$的自然宽度，$\mathit{str}(x)$是$x$的无限伸展因子，$W$是 \!\textwidth!，$n$是传递给\beginparacol 的列数。

% 
% \begin{eqnarray*}
% W'&=&\sum_{i=0}^{n-2}\big(\mathit{nat}(\hat w_i)+\mathit{nat}(\hat g_i)\big)+
%      \mathit{nat}(\hat w_{n-1})\\
% F&=&\sum_{i=0}^{n-2}\big(\mathit{str}(\hat g_i)+\mathit{str}(\hat g_i)\big)+
%      \mathit{str}(\hat w_{n-1})\\
% x_i&=&\cases{(W/W')\mathit{nat}(\hat x_i)&$W'\geq W\;\lor\;F\leq0$\cr
%              \mathit{nat}(\hat x_i)+(\mathit{str}(\hat x_i)/F)(W-W')&
%                                           $W'< W\;\land\;F>0$}
%     \qquad(x\in\{w,g\})
% \end{eqnarray*}
% That is, if the total of natural widths $W'$ is larger than \!\textwidth!
% $W$ or there are no infinite stretch factors in the specification, given
% widths are scaled down or up so that the scaled total is equal to $W$.
% Otherwise, each width with an infinite stretch factor is extended
% according to its ratio in the total stretch so that the stretched total is
% equal to $W$.

% 也就是说，如果自然宽度的总和$W'$大于 \!\textwidth! $W$，或者规范中没有无限伸展因子，给定的宽度将被缩小或放大，使得缩放后的总和等于$W$。否则，每个具有无限伸展因子的宽度将根据其在总伸展中的比例进行扩展，以使伸展后的总和等于$W$。
% 
% For a \env{paracol} environment with \parapag{}ing, $n$ is replaced with
% $n_l$ for the columns in left \parapag{}es, while $n$, $w_i$ and $g_i$ are
% replaced with $n_r$, $w_{n_r+i}$ and $g_{n_r+i}$ for those in right
% \parapag{}es.  Moreover, if the optional argument having
% $s'_0,s'_1,\cdots,s'_{k'}$ is provided, $w_{n_r+i}$ and $g_{n_r+i}$ for a
% column in right \parapag{}es are determined by $s'_i$ instead of $s_i$.

% 对于具有\parapag{}分页的\env{paracol}环境，对于左侧\parapag{}的列，将$n$替换为$n_l$，而对于右侧\parapag{}的列，将$n$，$w_i$和$g_i$分别替换为$n_r$，$w_{n_r+i}$和$g_{n_r+i}$。此外，如果提供了具有$s'0,s'1,\cdots,s'{k'}$的可选参数，则右侧\parapag{}的列中的$w{n_r+i}$和$g_{n_r+i}$由$s'_i$确定，而不是由$s_i$确定。
% \begin{itemize}
% \item
% In \env{paracol} environments having $n$ columns, $s_i$ s.t.\ $i\geq n$
% and $\hat g_{n-1}$ are ignored.  On the other hand if $k<n-1$, it is
% assumed $s_i$ is an empty string for all $i>k$.

% 在具有$n$列的\env{paracol}环境中，忽略满足$i\geq n$和$\hat g_{n-1}$的$s_i$。另一方面，如果$k<n-1$，则假设对于所有$i>k$，$s_i$都是一个空字符串。
% 
% \item
% Finite stretch factors and finite or infinite shrink factors in $\hat w_i$
% and $\hat g_i$ are ignored.
% 
% 在$\hat w_i$和$\hat g_i$中，有限的拉伸因子和有限或无限的收缩因子被忽略。
% \item
% Unlike \TeX's genuine glue addition, all infinite unit |fil|, |fill| and
% |filll| are not distinguished in the summation for $F$.  Also unlike
% \TeX's genuine scaling of a glue primitive, 
% $f\!\fill!$ means $0\,|pt|\ |plus|\ f\,|fill|$ for convenience\footnote{
% 
% In \TeX's grammar, $f\!\fill!$ means a dimension rather than a glue and is
% $0\,|pt|$ because the natural component of \!\fill! is 0.}.

% 与 \TeX 的真正粘连添加不同，所有无限单位的 |fil|、|fill| 和 |filll| 在 $F$ 的求和中没有区别。另外，与 \TeX 的真正粘连原语的缩放不同， $f\!\fill!$ 表示为 $0,|pt|\ |plus|\ f,|fill|$，以方便使用\footnote{在 \TeX 的语法中，$f\!\fill!$ 表示的是一个尺寸而不是粘连，并且是 $0,|pt|$，因为 \!\fill! 的自然分量为 0。}。
% 
% \item
% The division $W/W'$ and $\mathit{str}(\hat x_i)/F$ can have some
% arithmetic errors and thus the total of $w_i$ and $g_i$ may not be equal to
% $W$ exactly but can be a little bit less than $W$.  This small error is,
% however, equally distributed to $g_i$ in typesetting of a page to make the
% total width of columns and gaps is exactly $W$\footnote{
% 
% If we may ignore the arithmetic error inherent in \TeX.}.

% 除法$W/W'$和$\mathit{str}(\hat x_i)/F$可能存在一些算术误差，因此$w_i$和$g_i$的总和可能不完全等于$W$，而可能略小于$W$。然而，在页面排版中，这个小的误差被等分给$g_i$，以确保列和间隙的总宽度恰好为$W$\footnote{
% 
% 如果我们可以忽略\TeX 中固有的算术误差。}。
% 
% \item
% All the specifications shown in the table below give us same results for a
% \env{paracol} environment having three columns, providing
% $\!\textwidth!=360\,|pt|$ and $\!\columnsep!=S=20\,|pt|$.

% 下表中显示的所有规格都可以得到相同的结果，适用于具有三列的\env{paracol}环境，其中 $\!\textwidth!=360,|pt|$和$\!\columnsep!=S=20,|pt|$。
% 
% \par\hbox to\textwidth\bgroup\hfil
% \nosv \def\|{\verb|}\small\arraycolsep0pt\def\arraystretch{1.1}
% $\begin{array}[b]{l|ccccc}
% s_0,s_1,s_2&w_0&g_0&w_1&g_1&w_2\rlap{ (in \texttt{pt})}\\\hline
% \|50pt/20pt,100pt/40pt,150pt|&50&20&100&40&150\\
% \|50pt,100pt/2\columnsep,150pt|&50&S&
%                                100&2S&150\\
% \|50pt/\fill,100pt/2\fill,150pt|&50&(1/3)\cdot60&100&(2/3)\cdot60&150\\
% \|,2\fill/2\columnsep,3\fill|&\ (1/6)\cdot300&S&
%                              (2/6)\cdot300&2S&
%                              (3/6)\cdot300\\
% \|50pt/20,50pt plus 1fil/40pt,50pt plus 2fil |&
%                              50&20&50+(1/3)\cdot150&40&
%                              50+(2/3)\cdot150\\
% \|5pt/2pt,10pt/4pt,15pt|&10\cdot5&10\cdot2&10\cdot10&10\cdot4&
%                         10\cdot15\\
% \|100pt/40pt,200pt/80pt,300pt|&0.5\cdot100&0.5\cdot40&
%                               0.5\cdot200&0.5\cdot80&
%                               0.5\cdot300
% \end{array}$\hfil\egroup
% 
% \item
% If your document has both of \!\columnratio! and \!\setcolumnwidth! prior
% to a \env{paracol} environment, the command given later is effective for
% the environment.

如果在\env{paracol}环境之前的文档中同时存在 \!\columnratio! 和 \!\setcolumnwidth!，则后面给出的命令对该环境有效。
% \end{itemize}
% \end{description}
% 
% 
% 
% \subsection{Commands for Two-Sided Typesetting and Marginal Note Placement}
% \label{sec:ref-twoside}
% \changes{v1.3-3}{2013/09/17}
%	{Add the sub-section ``Commands for Two-Sided Typesetting and Marginal
%	 Note Placement''.}
% \changes{v1.3-4}{2013/09/17}
%	{Add the sub-section ``Commands for Two-Sided Typesetting and Marginal
%	 Note Placement''.}
% \changes{v1.3-5}{2013/09/17}
%	{Add the sub-section ``Commands for Two-Sided Typesetting and Marginal
%	 Note Placement''.}
% 
% \begin{description}
% \item[\Midx{\!\twosided!}{$|[|t_1t_2\cdots t_k|]|$}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{twosided}.}
% \changes{v1.3-4}{2013/09/17}
%	{Add description of \cs{twosided}.}
% \changes{v1.3-5}{2013/09/17}
%	{Add description of \cs{twosided}.}
% 
% The command enables a set of two-sided typesetting features
% $\Set{t_i}{t_i\in\{|p|,|c|,|m|,|b|\},\ 1\leq i\leq k}$ explicitly by the
% optional argument, or all of the following four features as a whole
% without the argument, in even-numbered pages.
% 
% \begin{description}
% \item[|p|\rm(\textit{age})]
% for ordinary two-sided paging, letting the left side margin be
% \!\evensidemargin!, page headers be different from those in odd-numbered
% pages with |headings| or |myheadings| page style, and \!\cleardoublepage!
% leave an even-numbered page blank if it is used in an odd-numbered page.
% 
% \item[|c|\rm(\textit{olumn})]
% for {\em\Uidx\cswap} to \emph{print} columns in even-numbered pages in
% reverse order.  This feature is sometimes preferable in typesetting
% especially with unbalanced parallel columns to make, for example, a wider
% columns are always \emph{inside} while narrower ones are \emph{outside}.
% 
% \item[|m|\rm(\textit{arginal text})]
% to place marginal notes in the side margin opposite to that specified by
% the command \!\marginparthreshold! discussed shortly.
% 
% \item[|b|\rm(\textit{ackground painting})]
% to make \bgpaint, shown in Section~\ref{sec:ref-bgpaint},
% \emph{\mirror{}ed} so that, for example, a color specified for the left
% margin is used to paint the right margin instead.
% \end{description}
% 
% \begin{itemize}
% \item
% The feature |p| is also enabled by the |twoside| option of
% \!\documentclass! with almost all classes including |article|, |book|,
% |report|, etc.  Though it is strongly recommended to make both settings by
% \!\documentclass! and this command consistent, they can be inconsistent
% resulting in lack of some expected functions.  For example, enabling |p|
% feature by \!\twosided! without |twoside| option in \!\documentclass!
% makes the format of headers and footers in all pages same even with
% \!\pagestyle!|{headings}|.
% 
% \item
% The \cswap{} enabled by the feature |c| is ineffective in \npaired{}
% \parapag{}ing because it is meaningless\footnote{
% 
% Unless somebody tells the author it is meaningful.},
% 
% and thus silently ignored.
% 
% \item
% In ordinary single-column typesetting, marginal note swapping in
% even-numbered pages is enabled by the |twoside| option, while it never takes
% place in ordinary two-column typesetting.  For marginal notes given in
% \env{paracol} environments, however, swapping of them in
% even-numbered pages is enabled by giving the feature |m| to \!\twosided!.
% 
% \item\label{page:cswap}
% The command has to be outside of \env{paracol} environments to decide the
% action in the environments following them.  If it appears in a
% \env{paracol} environment, you will have a warning message saying it is
% ignored.
% 
% \twosided[c]\columnratio{0.6}\columnsep0pt
% \begin{paracol}{2}
% \hfuzz2pt
% \item
% Here is an example of column swapping.  Since this page
% \pageref{page:cswap} is odd, this wider column-0 with roman font is placed
% in left side and thus inside at the begining, but now we are in an even
% page in which this column is in right side.
% 
% \switchcolumn
% \item\it
% This narrower, outside and italicized column-1 is at first in right
% side but the page break has changed the position to the left.
% \end{paracol}
% 
% \item
% \changes{v1.2-4}{2013/05/11}
% 	{Add description of \cs{[no]swapcolumninevenpages}.}
% \changes{v1.3-5}{2013/09/17}
% 	{Remove description of \cs{[no]swapcolumninevenpages} but mention
%	 they are still available.}
% 
% In old versions of \Paracol, namely 1.2 and its minor revisions 1.2x,
% \cswap{} was controlled by lengthy commmands
% \Midx{\!\swapcolumninevenpages!} and \Midx{\!\noswapcolumninevenpages!}.
% Though they are still available and will be so forever for backward
% compatibility, it is recommended to use \!\twosided! with or without the
% feature |c|.  The old versions also have a problem that \spanning{}
% crossing a page boundary is placed incorrectly after the page break in it,
% but this problem is solved by a fix incorporated in version 1.3.
% 
% \item
% It must be $t_i\in\{|p|,|c|,|m|,|b|\}$, or you will have an error message
% of illegal two-siding feature.
% 
% \item
% Section~\ref{sec:ppts} shows examples of two-sided typesetting together
% with related issues on \parapag{}ing.
% \end{itemize}
% 
% 
% 
% \item[\Midx{\!\marginparthreshold!}$\Arg{k}{|[|k'|]|}$]\mbox{}\par
% \changes{v1.3-4}{2013/09/17}
%	{Add description of \cs{marginparthreshold}.}
% 
% The command specifies the minimum ordinal $k$ of columns whose marginal
% notes are placed in right margin.  That is, marginal notes given in a
% column-$i$ go to left margin if $i<k$, while they go to right if $i\geq
% k$.  The optional argument $k'$, if given, is for columns in right
% \parapag{}es to decide the margin where their marginal notes are placed.
% In default, $k=1$ is assumed to let marginal notes from the leftmost
% column-0 go to left margin while those from other columns go to right.
% 
% \begin{itemize}
% \item
% You may specify $k=0$ to let all marginal notes go to right margin, or may
% give the command a large number, say 100, to place all of them in left
% margin.
% 
% \item
% The setting $k=0$ or $k=100$ above makes a side margin \emph{shared} by
% marginal notes from different columns, and sharing is inevitable when a
% (parallel-) page has three or more columns.  When a margin is shared by
% marginal notes from two or more columns, it can happen that two marginal
% notes from different columns conflict over the space to be occupied by each
% of them.  This conflict is solved by \Paracol{} to push down the note
% given later in your source |.tex| until an available space for it is
% found.  Note that the marginal note to be pushed down is determined by the
% position in the source rather than that in the printed result.  Also note
% that \Paracol{} exploits space between two marginal notes having been
% already placed in the placement of other note coming later to place it at
% the natural position if possible or to minimize the amount of pushing down
% otherwise.
% 
% \item
% In the decision of the real margin in which a marginal note is placed,
% other two factors are involved;  |m| feature of \!\twosided! command and
% the parity of the page; and \LaTeX's genuine command \!\reversemarginpar!.
% More specifically, after the first preliminary decision is made according
% to the threshold given to \!\marginparthreshold!, we have the following
% two steps to modify the decision;  if |m| feature has been specified in
% \!\twosided! command and the marginal note belongs to an even-numbered
% page, the decision is reversed to have the second preliminary result;  and
% then if \!\reversemarginpar! has been specified, the second result is
% reversed (again) to have the final result.
% 
% \item
% In old versions of \Paracol, namely older than 1.3, marginal note
% placement was not only uncontrollable but also gave ugly results when your
% document has three or more columns because the marginal notes from a column
% not being leftmost or rightmost were placed in the gap following the
% column rather than a margin.  This miserable {\em gap note} placement does
% not happen any more, or in other words this is no more available because
% the author believes nobody loves it.
% 
% \item
% Section~\ref{sec:ppts} shows examples of marginal note placement together
% with related issues on \parapag{}ing and two-sided typesetting.
% \end{itemize}
% 
% 
% 
% \item[\Midx{\!\marginnote!}\oarg{left}\marg{right}\oarg{voffset}]\mbox{}\par
% \changes{v1.35-3}{2018/12/31}
% 	{Add description of \cs{marginnote}.}
% You may use the package \textsf{marginnote} and its command \!\marginnote!
% in \env{paracol} environments as a replacement of \!\marginpar!.  However,
% the command is \emph{emulated} with \!\marginpar! and \textsf{paracol}'s
% own mechanism of marginal note placement.  Therefore, some of
% \textsf{marginnote}'s functionality are not effective in \env{paracol}
% environment except for the following features.
% 
% \begin{itemize}
% \item
% Shifting up/down a marginal note by the optional \meta{voffset}.
%
% \item
% Defining fonts (and others) for marginal notes by \!\marginfont!.
% 
% \item
% Controlling the holizontal paragraph alignment by \!\raggedleftmarginnote!
% and |\raggedright|\~|marginnote|\SpecialIndex{\raggedrightmarginnote}.
% \end{itemize}
% 
% Note that you will see a warning message ``|\margninnote| is emulated by
% |\marginpar|'' at the first in-\env{paracol} occurrence of the command to
% let you know the imperfection.
% \end{description}
% 
% 
% 
% \subsection{Commands for Counters}
% \label{sec:ref-counter}
% 
% \begin{description}
% \item[\Midx{\!\globalcounter!}\marg{ctr}]\mbox{}
% \Item[\Midx{\!\globalcounter!}\texttt{*}]\mbox{}\par
% \changes{v1.32-1}{2015/10/10}
% 	{Add descriptions of \cs{globalcounter*}.}
% 
% The command \!\globalcounter!\marg{ctr} declares that the counter
% \meta{ctr} is global to all columns, while \!\globalcounter!|*| does so
% for all counters.  An update of a \Uidx\gcounter{} in a column is seen by
% any other columns.
% 
% \begin{itemize}
% \item
% All column-local values of a descendant \lcounter{} of a \gcounter{} are
% zero-cleared when the \gcounter{} is explicitly stepped by \!\stepcounter!
% or \!\refstepcounter!, or implicitly by a sectioning command and so on.
% 
% \item
% The counter \counter{page} is always global but an explicit update of it
% by e.g., \!\setcounter! in a non-leftmost column is not seen by other
% columns and is canceled even for the column itself after a \cswitch{} or a
% page break in the column.  Therefore, if you want to make a \emph{jump} of
% \counter{page}, it must be done in the leftmost column 0.  Note that a
% jump from a page $p$ to $q$ can be seen in other columns even if they have
% gone beyond $p$ \emph{before} the column 0 makes the jump, as far as
% \counter{page} having $q$ (or its successor) is referred to by \!\pageref!
% or through \emph{contents} files such as |.toc|\footnote{
% 
% Direct reference to \counter{page} may give an inconsistent result, as you
% might have in ordinary \LaTeX{} documents.}.
% 
% \item
% All counters except for \counter{page} are local by default.  This feature
% may cause a problem with some packages including \textsf{marginnote} and
% \textsf{(auto-)pst-pdf} having their own counters which must be global.
% Since it is tough to find the name of such counters from package sources,
% if you have something wrong with these (or other) packages, try to put
% \!\globalcounter!|*| in your preamble and use \!\localcounter! shown below
% to localize specific counters which you need to be local.
% 
% \item
% Globalizing a \meta{ctr} being already global is just ignored without any
% complaints.
% \end{itemize}
% 
% 
% 
% \item[\Midx{\!\localcounter!}\marg{ctr}]\mbox{}\par
% The command declares that the counter \meta{ctr} is local for each column.
% 
% \begin{itemize}
% \item
% Though this command is intended for localizing a \meta{ctr} which is once
% globalized, localizing a local counter does not causes any error but is
% just ignored.  Localizing the permanently global \counter{page} is also
% just ignored without any complaints.
% \end{itemize}
% 
% 
% 
% \item[\Midx{\!\definethecounter!}\marg{ctr}\marg{col}\marg{rep}]\mbox{}\par
% The command defines |\the|\meta{ctr} being \marg{rep} for the local use in
% the column \meta{col}.  That is, |\the|\meta{ctr} in the column \meta{col}
% acts as if it is defined by
% \!\renewcommand!\Arg{\cs{the}\meta{ctr}}\Arg{\meta{rep}}.
% 
% 
% 
% \item[\Midx{\!\synccounter!}\marg{ctr}]\mbox{}\par
% The command \emph{broadcasts} the value of the \lcounter{} \meta{ctr} in
% the column in which the command appears to the values in all other columns.
% 
% \item[\Midx{\!\syncallcounters!}]\mbox{}\par
% The command broadcasts the values of all \lcounter{}s in the column in
% which the command appears to the values in all other columns.
% \end{description}
% 
% 
% 
% \subsection{Page-Wise Footnotes}
% \label{sec:ref-scfnote}
% \changes{v1.2-2}{2013/05/11}
% 	{Add the sub-section ``Single-Columned Footnotes'' to describe newly
%	 introducerd commands for page-wise footnotes.}
% \changes{v1.3-5}{2013/09/17}
%	{Rename the sub-section title from ``Single-Columned Footnotes'' to
% 	``Page-Wise Footnotes'' following new naming.}
% 
% \begin{description}
% \item[\Midx{\!\footnotelayout!}\marg{layout}]\mbox{}\par
% The command specifies the \meta{layout}${}\in\{|c|,|p|,|m|\}$ of footnotes
% in \env{paracol} environments as follows.
% 
% \begin{description}
% \item[|c|\rm(\textit{olumn})] makes footnotes {\em\Uidx\mcfnote} (aka
% multi-columned) being default to place footnotes in each column at the
% bottom of the column and separating them from \Preenv{} and \Postenv{}
% footnotes.
% 
% \item[|p|\rm(\textit{age})] makes footnotes {\em\Uidx\scfnote} (aka
% single-columned) so that footnotes in all columns are gathered, typeset
% spanning all columns, and placed at the bottom of the page in which they
% appear or at the end of the \env{paracol} environment they belong to, so
% that they are separated from \Preenv{} and \Postenv{} footnotes.
% 
% \item[|m|\rm(\textit{erge})] makes \Scfnote{}s {\em\Uidx\mgfnote} with
% footnotes in outside of the environment but in the same page, i.e., those
% in \Preenv{} and \postenv.
% \end{description}
% 
% 
% \begin{itemize}
% \item
% An example of \Mgfnote{} is found in p.~\pageref{sec:ref-paracol} while
% you will see many of them in Section~\ref{sec:fnnp}\footnote{
% 
% The left-column footnote \ref{fn:flush} in p.~\pageref{fn:flush} looks like
% a merged footnote because it is at the bottom of the page and the marked
% text is above the single-column text.  However, it is an ordinary
% \mcfnote{} one produced by a trick with \cs{footnotemark} and
% \cs{footnotetext} in different \env{paracol} environments.}.
% 
% \item
% In any layouts, a footnote cannot have page breaks in it, i.e., a footnote
% is always put in a page as a whole.  This makes it impossible to have a
% footnote taller than \!\textheight! and thus you will see a warning
% message if you give a very long footnote which will be printed intruding
% into the area for page footer (or out of the paper bound).
% 
% \item
% Choosing the layout |p|age-wise or |m|erged makes \counter{footnote}
% counter global and \!\fncounteradjustment!  shown below performed inside
% \!\footnotelayout!.  Choosing |c|olumn-wise let the command do the
% operations oppositely, i.e., localizes \counter{footnote} and does
% \!\nofncounteradjustment!.  Though these settings are usually appropriate
% for each footnote layout but you can override them by explicitly using
% commands like \!\localcounter!|{footnote}|.
% 
% \item
% The command has to be outside of \env{paracol} environments to decide the
% action in the environments following them.  If it appears in a
% \env{paracol} environment, you will have a warning message saying it is
% ignored.
% 
% \item
% \changes{v1.3-5}{2013/09/17}
% 	{Remove description of \cs{multicolumnfootnotes},
%	 \cs{singlecolumnfootnotes}, \cs{mergedfootnotes} but mention they
%	 are still available.}
% 
% In old versions of \Paracol, namely 1.2 and its minor revisions 1.2x,
% footnote layout was controlled by a set of lengthy commands
% \Midx{\!\multicolumnfootnotes!} for |c|, \Midx{\!\singlecolumnfootnotes!}
% for |p|, and \Midx{\!\mergedfootnotes!} for |m|.
% Though they are still available and will be so forever for backward
% compatibility, it is recommended to use \!\footnotelayout!\footnote{
% 
% Not only for type saving but also for being familiar with this command
% which could have some advanced feature, for example to put gathered
% footnotes into a specific column, someday.}.
% 
% % \item
% It must be $\meta{layout}\in\{|c|,|p|,|m|\}$, or you will have an error
% message of illegal layout specifier.
% \end{itemize}
% 
% 
% 
% \KeepSpace{5}
% \item[\Midx{\!\footnote!}\texttt{*}\oarg{num}\marg{text}]\mbox{}
% \Item[\Midx{\!\footnotemark!}\texttt{*}\oarg{num}]\mbox{}
% \Item[\Midx{\!\footnotetext!}\texttt{*}\oarg{num}\marg{text}]\mbox{}\par
% The starred version of \!\footnote!, \!\footnotemark! and \!\footnotetext!
% are for the adjustment of the footnote numbering, the order of footnote
% marks in main texts, and the stacking order of footnotes at page
% bottom.  Their usages with various examples are given in
% Section~\ref{sec:fnnp}.
% 
% 
% 
% \KeepSpace{3}
% \item[\Midx{\!\fncounteradjustment!}]\mbox{}
% \Item[\Midx{\!\nofncounteradjustment!}]\mbox{}\par
% The maintenance of \counter{footnote} with the starred footnote commands
% such as \!\footnote!|*| shown above causes out-of-order progress of the
% counter to make it hard to have a consistent counter value at
% \Endparacol.  The command \!\fncounteradjustment! is to let \Endparacol{}
% adjust the value of the counter based on its value at
% \beginparacol{} and the number of footnote commands in the environment.
% The command \!\nofncounteradjustment! is to tell \Endparacol{} to do
% nothing as in default.
% 
% \begin{itemize}
% \item
% Though \!\footnotelayout! with |p|(age-wise) or |m|(erged) argument does
% \!\fncounteradjustment! while that with |c|(olumn) does
% \!\nofncounteradjustment! inside of it, you can override these settings by
% explicitly putting a counter adjustment command after \!\footnotelayout!.
% 
% \item
% The effect of \!\fncounteradjustment! is shown in Section~\ref{sec:fnnp}.
% \end{itemize}
% 
% 
% \item[\Midx{\!\belowfootnoteskip!}]\mbox{}\par
% \changes{v1.35-4}{2018/12/31}
% 	{Add description of \cs{belowfootnoteskip}.}
% The typesetting parameter specifies the amount of the space inserted below
% footnotes of single-column \preenv{} if it does not have bottom floats.  The
% default amount is 0\,pt, i.e., no space is added.
% 
% \end{description}
% 
% 
% \KeepSpace{6}
% \subsection{Commands for Coloring Texts and Column-Separating Rules}
% \label{sec:ref-tcolor}
% \changes{v1.3-3}{2013/09/17}
%	{Rename the sub-sectoin title from ``Commands for Text Coloring'' to
%	 ``Commands for Coloring Texts and Column-Separating Rules'' to
%	 add description of the rule coloring together with the rule
%	 drawing itself.}
% 
% \begin{description}
% \item[\Midx{\!\columncolor!}\oarg{mode}\marg{color}\oarg{col}]\mbox{}
% \Item[\Midx{\!\normalcolumncolor!}\oarg{col}]\mbox{}\par
% \changes{v1.2-1}{2013/05/11}
%	{Add description of \cs{columncolor} and \cs{normlcolumncolor}.}
% 
% The command \!\columncolor! declares that the \emph{default color} of a
% column is \meta{color} or what it specifies by the combination with the
% optional \meta{mode}.  The command \!\normalcolumncolor! declares the
% default color is what \!\normalcolor! specifies, i.e., black usually.  The
% target column of these commands is that in which the commands reside, or
% \meta{col} if it specified.
% 
% \begin{itemize}
% \item
% The command may be outside of \env{paracol} environment.  If so and
% \meta{col} is not provided, the target column is the leftmost 0.
% 
% \item
% The default color declaration is \emph{global}.  Therefore, even if the
% command appears in a \env{paracol} environment (and even in some grouping
% structure in it), the declaration will be kept effective after
% \Endparacol{} to determine the default color of the specified column in
% succeeding \env{paracol} environments.
% 
% \item
% To give a color to texts (and maybe other stuff) in a column correctly,
% you need to load \textsf{color} package or its relative (e.g.,
% \textsf{xcolor}) which the implementation of coloring in \textsf{paracol}
% relies on.
% 
% \item
% Coloring with \!\color!\oarg{mode}\marg{color} and other coloring commands
% in \env{paracol} environments is of course allowed.  One caution is that
% the \!\color! decides the color for following texts until other
% specification is given or the group surrounding the command is closed.
% Therefore, \!\switchcolumn! does not affect the coloring but a color given
% to the texts in a column is also applied to the texts in the column to be
% switched to.  This irrelativeness of coloring and \cswitch{} is shown in
% the example below.
% 
% \twosided[]\columnratio{0.5}\columnsep0pt
% \tolerance5000\hbadness5000
% \begin{paracol}{2}
% \columncolor{blue}
% This column is colored blue because\\
% \mbox{}\qquad \!\columncolor!|{blue}|\\
% is specfied.  Here we have a \!\switchcolumn!.
% \switchcolumn
% \columncolor{red}
% This column is colored red because\\
% \mbox{}\qquad\!\columncolor!|{red}|\\
% is specified.
% 
% \begin{color}{green}
% Now the color of the right column is changed to green because\\
% \mbox{}\qquad\!\begin!|{color}{green}|\\
% is given prior to this paragraph.  Now we have another \!\switchcolumn! to
% go back to the left.
% \switchcolumn
% The color of this paragraph is green because we are still in the
% environment of green coloring, which we are now closing.\par
% \end{color}%
% 
% Since the coloring environment has been closed, the color of this
% paragraph is the default blue.  Now we have yet another and the last
% \!\switchcolumn! to the right.
% \switchcolumn
% Since this paragraph is outside of the coloring environment, its color is
% the default red.
% \end{paracol}
% 
% \normalcolumncolor[0]\normalcolumncolor[1]
% The default coloring of columns does not affect anything outside of
% \env{paracol} environment of course, and thus this sentence is not
% colored\footnote{
% 
% Or colored black as \cs{normalcolor} specifies.}.
% \end{itemize}
% 
% 
% 
% \KeepSpace{4}
% \item[\Midx{\!\coloredwordhyphenated!}]\mbox{}
% \Item[\Midx{\!\nocoloredwordhyphenated!}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{coloredwordhyphenated} and
%	 \cs{nocoloredwordhyphenated}.}
% 
% The command \!\coloredwordhyphenated! allows the first word following a
% coloring command such as \!\color! to be hyphenated, but at the same time
% make it possible that a line is broken before the word.  The command
% \!\nocoloredwordhyphenated! acts oppositely and thus line breaking before
% the first word and hyphenating it are inhibited.  By default,
% \!\coloredwordhyphenated! is effective.
% 
% \begin{itemize}
% \item
% The implementation of \textsf{color} package and its relatives makes it
% impossible that \meta{word} is hyphenated when it appears like
% |{|\!\color!|{red}|\meta{word} \ldots|}| or
% \!\textcolor!|{|\meta{word} \ldots|}|.  This inhibition of the hyphenation
% is sometimes annoying especially when the document is multi-columned and
% thus a line is narrow and a column is written in a language having long
% words such as German.  Therefore in \Paracol{} package, a trick is used to
% allow the \meta{word} is hyphenated.  However this trick being insertion
% of a null horizontal space has a side effect that the word can have a line
% break before it.  Though this line break is usually unharmful, in a
% special occasion the break is undesirable and
% in\textcolor{red}{appropriate} by making it possible that the
% \emph{half-colored} word `inappropriate' is broken between `in' and
% `appropriate' without hyphenation.  Therefore, if you find such a
% inappropriate break, use \!\nocoloredwordhyphenated! as follows, for example.
% \begin{quote}
% |{\nocoloredwordhyphenated in\textcolor{red}{appropriate}}|
% \end{quote}
% \end{itemize}
% 
% 
% \KeepSpace{4}
% \item[\Midx{\!\colseprulecolor!}\oarg{mode}\marg{color}\oarg{col}]\mbox{}
% \Item[\Midx{\!\normalcolseprulecolor!}\oarg{col}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{colseprulecolor} and
%	 \cs{normalcolseprulecolor}.}
% 
% The command \!\colseprulecolor! declares the color for
% {\em\Uidx\cseprule{}s}, being the vertical rules drawn at the center of
% gaps between columns, is \meta{color} or what it specifies by the
% combination with the optional \meta{mode}.  The command
% \!\normalcolseprulecolor! declares the color of rules is what
% \!\normalcolor! specifies, i.e., black usually.  If the optional argument
% \meta{col} is given, these commands specifies the color of the rule in the
% gap following the column whose ordinal is \meta{col}, rather than all rules.
% 
% \begin{itemize}
% \item
% The rules are drawn if \LaTeX's typesetting parameter \!\columnseprule!
% for the rule width has non-zero value, e.g., 0.4\,|pt| to obey the
% standard rule thickness.  The rules are \emph{not} drawn on \pwstuff{},
% i.e., \Preenv{} and \postenv, \pwise{} floats or (\mgfnote{} or
% non-merged) \Scfnote{}s of course but also \mctext{}s.  Therefore, if a
% page has \mctext{}s, the rules are {\em broken} by them as shown in the
% red rule example below.
% \global\unitlength\@totalleftmargin
% \end{itemize}
% \end{description}
% 
% \columnseprule0.4pt\colseprulecolor{red}[1]\colseprulecolor{white}[0]
% \setcolumnwidth{\unitlength/0pt}
% \begin{paracol}{3}\switchcolumn\noindent 
% This is a left column paragraph preceding a \mctext.  Of cource the rule
% separating this and the next column starts from the top of this paragraph.
% \switchcolumn\noindent
% This is a right column paragraph preceding a \mctext{} given by the
% \!\switchcolumn!|*| at its end.
% \switchcolumn[1]*[\subsubsection*{\hbox to\unitlength{}
% An Example of Spanning Text Given by \cs{subsubsection}|*| Command}]
% Since we have a \mctext{} above, the red rule separating this and the next
% column is broken by the text.
% \switchcolumn
% It is also natural that the rule separating this and the previous column is
% terminated at the end of this \env{paracol} environment.
% \end{paracol}
% \columnseprule0pt\columnratio{}
% 
% \begin{description}
% \Item[]\mbox{}
% \begin{itemize}
% \Item
% To give a color to rules correctly, you need to load \textsf{color}
% package or its relative (e.g., \textsf{xcolor}) which the implementation
% of coloring in \textsf{paracol} relies on.
% 
% \item
% Once you give a color to rules in a specific gap with the optional
% \meta{col}, another \!\colseprulecolor! or \!\normalcolseprulecolor!
% without \meta{col} does \emph{not} change the color of the rule in the
% gap.
% \end{itemize}
% \end{description}
% 
% 
% 
% \KeepSpace{7}
% \subsection{Commands for Background Painting}
% \label{sec:ref-bgpaint}
% \changes{v1.3-3}{2013/09/17}
%	{Add the sub-section ``Commands for Background Painting.}
% 
% \begin{description}
% \item[\Midx{\!\backgroundcolor!}\marg{region}\oarg{mode}\marg{color}]
%     \mbox{}\par
% \Item[\Midx{\!\backgroundcolor!}
%     \Arg{\meta{region}$|(|x_0|,|y_0|)|$}\oarg{mode}\marg{color}]
%     \mbox{}\par
% \Item[\Midx{\!\backgroundcolor!}
%     \Arg{\meta{region}$|(|x_0|,|y_0|)||(|x_1|,|y_1|)|$}
%     \oarg{mode}\marg{color}]
%     \mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{backgroundcolor}.}
% 
% The command declares that {\em\Uidx\bgpaint} of \meta{region} is performed
% with \meta{color} or what it specifies by the combination of the optional
% \meta{mode}.  The \meta{region} whose \bground{} is painted is one of the
% following.
% 
% \begin{description}
% \item[|c|\rm(\textit{olumn})] for all columns, or particular one if
% \meta{region} is |c|\oarg{col} to specify its ordinal \meta{col}.
% 
% \item[|g|\rm(\textit{ap})] for all gaps between columns, or particular one
% if \meta{region} is |g|\oarg{col} to specify the ordinal \meta{col} of the
% column preceding the gap.
% 
% \item[|s|\rm(\textit{panning})] for \mctext{}s.
% 
% \item[|f|\rm(\textit{loat})] for \pwise{} floats.
% 
% \item[|n|\rm(\textit{ote})] for (\mgfnote{} or non-merged) \Scfnote{}s.
% 
% \item[|p|\rm(\textit{re/post})] for \Preenv{} and \postenv.
% 
% \item[|t|\rm(\textit{op})] for top margin.
% 
% \item[|b|\rm(\textit{ottom})] for bottom margin.
% 
% \item[|l|\rm(\textit{eft})] for left margin.
% 
% \item[|r|\rm(\textit{ight})] for right margin.
% \end{description}
% 
% In addition, capitals of the keys above, i.e., |C|, |G|, \ldots, |L|, are
% also legitimate for {\em under painting}.  For example, you may specify to
% paint the \bground{} of a region, say top margin, by two
% \!\backgroundcolor! with |t| and |T| and with different color arranging the
% size of the region of either |t| or |T| (or both of them) by the
% \emph{\bgext} option shown below.
% 
% The optional $|(|x_0|,|y_0|)|$ is to enlarge the region to be painted
% shifting its left-top and right-bottom corner outside by
% the dimension $x_0$ horizontally and $y_0$ vertically, or to shrink it
% with negative dimensions.  This {\em\Uidx\bgext} can be asymmetric giving
% another optional $|(|x_1|,|y_1|)|$ so that it acts on the right-bottom
% corner while let $|(|x_0|,|y_0|)|$ shift only the left-top corner.
% Moreover, you may make each \bgext{} {\em infinite} by giving 10000\,|pt|
% (about 3.5\,m) to $x_0$, $y_0$, $x_1$ and/or $y_1$ so that the
% corresponding region edge is shifted to the paper edge.  Furthermore, this
% {\em\Uidx\bginfext{}} can be terminated at the point $\alpha$ inside the
% corresponding paper edge by giving $10000\,|pt|-\alpha$
% ($\alpha\leq1000\,|pt|$) to an extension parameter $x_0$, etc.
% 
% \begin{itemize}
% \item
% A region whose color is not specified is not painted and thus left blank
% (or kept as painted by \!\pagecolor! if you specify it).
% 
% \item
% Under-painting of columns and gaps by |C| and |G| is made for regions
% different from those over-painting |c| and |g|.  That is, under-painting
% is done ignoring all \pwstuff{} and thus the height of the regions is
% always $\!\textheight!+\!\maxdepth!$.  On the other hand, over-painting is
% only for chunks shrunk or separated by \pwstuff.
% 
% \item
% You may exploit the following painting order, where $x_i$
% is the $i$-th \mctext{} ($x\in\{|s|,|S|\}$) or $i$-th chunk followed by
% the $i$-th \mctext, $m$ and $n$ is the number of \mctext{}s and columns in
% a page respectively, to overlay a preceding region with a succeeding
% region, if your \emph{printer} allows overlaid color painting.
% 
% \begin{eqnarray*}
% |T|&\to&|B|\to|L|\to|R|
%     \to|G[|0|]|\to\cdots\to|G[|n{-}1|]|\to|C[|0|]|\to\cdots\to|C[|n{-}1|]|\\
% &\to&|t|\to|b|\to|l|\to|r|\to|N|\to|n|\to\{|F|,|P|\}\to\{|f|,|p|\}
%  \to|S|_1\to\cdots\to|S|_m\\
% &\to&|g|_1|[|0|]|\to\cdots|g|_1|[|n{-}2|]|\to
%      |c|_1|[|0|]|\to\cdots|c|_1|[|n{-}1|]|\to|s|_1\\
% &\to&\cdots\\
% &\to&|g|_m|[|0|]|\to\cdots|g|_m|[|n{-}2|]|\to
%      |c|_m|[|0|]|\to\cdots|c|_m|[|n{-}1|]|\to|s|_m\\
% &\to&|g|_{m+1}|[|0|]|\to\cdots|g|_{m+1}|[|n{-}2|]|\to
%      |c|_{m+1}|[|0|]|\to\cdots|c|_m|[|n{-}1|]|
% \end{eqnarray*}
% 
% \item
% If you specify |b| feature by \!\twosided!, \bgpaint{} is
% {\em\Uidx\mirror{}ed} in even-numbered pages so that |l| and |L| mean
% right margin, |r| and |R| mean left margin, and asymmetric extensions are
% applied to right-top and left-bottom corners.
% 
% \item
% To give a color for \bgpaint{} correctly, you need to load \textsf{color}
% package or its relative (e.g., \textsf{xcolor}) which the implementation
% of coloring in \textsf{paracol} relies on.
% 
% \item
% To paint margins and regions having infinite extension correctly, the
% parameters \!\paperwidth! and \!\paperheight! should be set properly by,
% for example, a paper selection option of \!\documentclass!.
% 
% \item
% Section~\ref{sec:bgpaint} shows examples of \bgpaint{} to give you more
% intutive explanations of \!\backgroundcolor! and its region specifications.
% \end{itemize}
% 
% 
% 
% \item[\Midx{\!\nobackgroundcolor!}\marg{region}]\mbox{}
% \Item[\Midx{\!\resetbackgroundcolor!}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{nobackgroundcolor} and
%	 \cs{resetbackgroundcolor}.}
% 
% The command \!\nobackgroundcolor! declares that the \bground{} of
% \meta{region} is not painted, where \meta{region} is one of legitimate
% region specifiers of \!\backgroundcolor!.  The command
% \!\resetbackgroundcolor! declares no regions are painted and thus gives
% you the default state.
% 
% \begin{itemize}
% \item
% If you specified the \bgpaint{} of |c|\oarg{col} or |g|\oarg{col} by
% \!\backgroundcolor!, the painting is \emph{not} canceled by
% \!\nobackgroundcolor! with |c| or |g| but without \oarg{col}.  Similarly,
% once you made declarations of \bgpaint{} of both |c| and |c|\oarg{col}
% (resp.\ |g| and |g|\oarg{col}), \!\nobackgroundcolor! with |c|\oarg{col}
% (resp.\ |g|\oarg{col}) cancels the painting of |c|\oarg{col} (resp.\
% |g|\oarg{col}) but the region will still be painted by the color you gave
% to |c| (resp.\ |g|).
% \end{itemize}
% 
% 
% 
% \item[\Midx{\!\pagerim!}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{pagerim}.}
% 
% This is a (kind of) \emph{length command}\footnote{
% 
% In reality, it is a \cs{dimen} register rather than a \cs{skip} register.}
% 
% to have the width of the \emph{rim} area placed at each paper edge to 
% inhibit \bgpaint{} in the area.  That is, the inner edges of the area are
% considered as virtual paper edges to block painting of all margins and
% regions having \bginfext{} to the edges, for example in order to
% avoid printing troubles caused by painting the rim area too close to the
% real paper edges.  The default value of \!\pagerim! is 0 to allow paint
% anywhere in a paper.
% \end{description}
% 
% 
% 
% \subsection{Control of Contents Output}
% \label{sec:ref-contents}
% 
% \begin{description}
% \item[\Midx{\!\addcontentsonly!}\marg{file}\marg{col}]\mbox{}\par
% The command inhibits the output of contents information to
% $\meta{file}\in\{|toc|,|lof|,|lot|\}$ from columns other than \meta{col}.
% 
% \begin{itemize}
% \item
% For example, this manual has \!\addcontentsonly!|{toc}{0}| to
% inhibit the contents information output from \!\subsection! commands
% in the right column in Section~\ref{sec:env} and~\ref{sec:float},
% or the table should have duplicated entries of sub-sections.
% 
% \item
% It must be $\meta{file}\in\{|toc|,|lof|,|lot|\}$, or you will have an
% error message of illegal type of contents file.
% \end{itemize}
% \end{description}
% 
% 
% 
% \subsection{Page Flushing Commands}
% \label{sec:ref-flush}
% 
% \begin{description}
% \item[\Midx{\!\flushpage!}]\mbox{}\par
% The command flushes pages up to the {\em\Uidx\tpage} in which the \lcolumn{}
% resides.  Deferred floats which can be put in the pages up to the \tpage{}
% are also flushed.
% 
% \item[\Midx{\!\clearpage!}]\mbox{}\par
% The command does what \!\flushpage! does and then flushes all floats still
% deferred if any.  The deferred float flushing beyond the \tpage{} takes
% place at first for \cwise{} ones creating \fcolumn{}s for them, and
% then for \pwise{} ones creating {\em\Uidx\fpage{}s} only with
% \pwise{} floats, as \LaTeX's \!\clearpage! does outside \env{paracol}
% environment.
% 
% \item[\Midx{\!\cleardoublepage!}]\mbox{}\par
% \changes{v1.3-5}{2013/09/17}
%	{Add description of \cs{cleardoublepage}.}
% The command does what \LaTeX's \!\cleardoublepage! does outside
% \env{paracol}.  That is, it does \!\clearpage! always and then leaves a
% blank page if it is even-numbered and two-sided |p|(age) feature is
% enabled by |twoside| option of \!\documentclass! or \Paracol's own
% \!\twosided! command shown in Section~\ref{sec:ref-twoside}.
% 
% \begin{itemize}
% \item
% This command is equivalent to \!\clearpage! in \env{paracol} environments
% for \npaired{} \parapag{}ing because \!\clearpage! flushes \emph{both}
% left and right \parapag{}es.
% \end{itemize}
% \end{description}
\endinput
