% \footnotelayout{m}
% \columnratio{}
% \section{Reference Manual\\参考手册}
% \label{sec:ref}


% 
% \subsection{Page-Wise Footnotes}
% \label{sec:ref-scfnote}
% \changes{v1.2-2}{2013/05/11}
% 	{Add the sub-section ``Single-Columned Footnotes'' to describe newly
%	 introducerd commands for page-wise footnotes.}
% \changes{v1.3-5}{2013/09/17}
%	{Rename the sub-section title from ``Single-Columned Footnotes'' to
% 	``Page-Wise Footnotes'' following new naming.}
% 
% \begin{description}
% \item[\Midx{\!\footnotelayout!}\marg{layout}]\mbox{}\par
% The command specifies the \meta{layout}${}\in\{|c|,|p|,|m|\}$ of footnotes
% in \env{paracol} environments as follows.

% 该命令指定了在\env{paracol}环境中脚注的 \meta{layout}${}\in\{|c|,|p|,|m|\}$，具体如下。
% \begin{description}
% \item[|c|\rm(\textit{olumn})] makes footnotes {\em\Uidx\mcfnote} (aka
% multi-columned) being default to place footnotes in each column at the
% bottom of the column and separating them from \Preenv{} and \Postenv{}
% footnotes.
% 
使脚注{\em\Uidx\mcfnote}（也称为多列脚注）默认在每列底部放置脚注，并将其与 \Preenv{} 和 \Postenv{} 的脚注分开。
% \item[|p|\rm(\textit{age})] makes footnotes {\em\Uidx\scfnote} (aka
% single-columned) so that footnotes in all columns are gathered, typeset
% spanning all columns, and placed at the bottom of the page in which they
% appear or at the end of the \env{paracol} environment they belong to, so
% that they are separated from \Preenv{} and \Postenv{} footnotes.
% 
将脚注设置为{\em\Uidx\scfnote}（也称为单列脚注），以便将所有列中的脚注聚集在一起，跨越所有列进行排版，并放置在它们所在的页面底部，或者放置在它们所属的\env{paracol}环境的末尾，以便与\Preenv{}和\Postenv{}脚注分开。
% \item[|m|\rm(\textit{erge})] makes \Scfnote{}s {\em\Uidx\mgfnote} with
% footnotes in outside of the environment but in the same page, i.e., those
% in \Preenv{} and \postenv.

在同一页的环境外但在相同页面中，即\Preenv{}和\postenv{}中，使用\Scfnote{}和{\em\Uidx\mgfnote}创建脚注。
% \end{description}
% 
% 
% \begin{itemize}
% \item
% An example of \Mgfnote{} is found in p.~\pageref{sec:ref-paracol} while
% you will see many of them in Section~\ref{sec:fnnp}\footnote{
% 
% The left-column footnote \ref{fn:flush} in p.~\pageref{fn:flush} looks like
% a merged footnote because it is at the bottom of the page and the marked
% text is above the single-column text.  However, it is an ordinary
% \mcfnote{} one produced by a trick with \cs{footnotemark} and
% \cs{footnotetext} in different \env{paracol} environments.}.

在第~\pageref{sec:ref-paracol} 页中可以找到 \Mgfnote{} 的一个示例，而在第~\ref{sec:fnnp} 节中则会看到许多这样的示例\footnote{在第~\pageref{fn:flush} 页的左列脚注 \ref{fn:flush} 看起来像是一个合并的脚注，因为它位于页面底部，而标记的文本位于单列文本之上。然而，它是由在不同的\env{paracol}环境中使用\cs{footnotemark}和\cs{footnotetext}技巧生成的普通\mcfnote{}脚注。}。
% 
% \item
% In any layouts, a footnote cannot have page breaks in it, i.e., a footnote
% is always put in a page as a whole.  This makes it impossible to have a
% footnote taller than \!\textheight! and thus you will see a warning
% message if you give a very long footnote which will be printed intruding
% into the area for page footer (or out of the paper bound).
% 
在任何布局中，脚注不会出现分页，即脚注总是作为一个整体放在一页中。这意味着脚注的高度不可能超过 \!\textheight!，因此如果您给出一个非常长的脚注，它将打印出超出页面页脚区域（或超出纸张边界）的警告消息。
% \item
% Choosing the layout |p|age-wise or |m|erged makes \counter{footnote}
% counter global and \!\fncounteradjustment!  shown below performed inside
% \!\footnotelayout!.  Choosing |c|olumn-wise let the command do the
% operations oppositely, i.e., localizes \counter{footnote} and does
% \!\nofncounteradjustment!.  Though these settings are usually appropriate
% for each footnote layout but you can override them by explicitly using
% commands like \!\localcounter!|{footnote}|.
% 
选择布局为|p|age-wise或|m|erged会使\counter{footnote}计数器变为全局，并在 \!\footnotelayout! 内执行下面的 \!\fncounteradjustment! 操作。选择|c|olumn-wise会使命令执行相反的操作，即将\counter{footnote}局部化并执行 \!\nofncounteradjustment!。虽然这些设置通常适用于每个脚注布局，但您可以通过显式使用 \!\localcounter!|{footnote}| 等命令来覆盖它们。
% \item
% The command has to be outside of \env{paracol} environments to decide the
% action in the environments following them.  If it appears in a
% \env{paracol} environment, you will have a warning message saying it is
% ignored.
% 
% 该命令必须放在\env{paracol}环境之外，以决定其后的环境中的操作。如果它出现在\env{paracol}环境中，你将收到一个警告消息，表示该命令被忽略。
% \item
% \changes{v1.3-5}{2013/09/17}
% 	{Remove description of \cs{multicolumnfootnotes},
%	 \cs{singlecolumnfootnotes}, \cs{mergedfootnotes} but mention they
%	 are still available.}
% 
% In old versions of \Paracol, namely 1.2 and its minor revisions 1.2x,
% footnote layout was controlled by a set of lengthy commands
% \Midx{\!\multicolumnfootnotes!} for |c|, \Midx{\!\singlecolumnfootnotes!}
% for |p|, and \Midx{\!\mergedfootnotes!} for |m|.
% Though they are still available and will be so forever for backward
% compatibility, it is recommended to use \!\footnotelayout!\footnote{
% 
% Not only for type saving but also for being familiar with this command
% which could have some advanced feature, for example to put gathered
% footnotes into a specific column, someday.}.
% 
在旧版本的 \Paracol 中（即 1.2 版本及其小修订版本 1.2x），脚注布局由一组冗长的命令控制：\Midx{\!\multicolumnfootnotes!} 用于 |c|，\Midx{\!\singlecolumnfootnotes!} 用于 |p|，\Midx{\!\mergedfootnotes!} 用于 |m|。虽然它们仍然可用，并且将永远保持向后兼容，但建议使用 \!\footnotelayout!\footnote{不仅为了节省输入，还为了熟悉这个命令，它可能具有一些高级功能，例如将收集的脚注放入特定的列中。}。

% % \item
% It must be $\meta{layout}\in\{|c|,|p|,|m|\}$, or you will have an error
% message of illegal layout specifier.

必须是 $\meta{layout}\in\{|c|,|p|,|m|\}$，否则您将收到非法布局说明符的错误消息。
% \end{itemize}
% 
% 
% 
% \KeepSpace{5}
% \item[\Midx{\!\footnote!}\texttt{*}\oarg{num}\marg{text}]\mbox{}
% \Item[\Midx{\!\footnotemark!}\texttt{*}\oarg{num}]\mbox{}
% \Item[\Midx{\!\footnotetext!}\texttt{*}\oarg{num}\marg{text}]\mbox{}\par
% The starred version of \!\footnote!, \!\footnotemark! and \!\footnotetext!
% are for the adjustment of the footnote numbering, the order of footnote
% marks in main texts, and the stacking order of footnotes at page
% bottom.  Their usages with various examples are given in
% Section~\ref{sec:fnnp}.
% 
\!\footnote!、\!\footnotemark! 和 \!\footnotetext! 的星号版本用于调整脚注编号、主文本中脚注标记的顺序以及页面底部脚注的堆叠顺序。其各种示例的用法详见第~\ref{sec:fnnp}节。
% 
% 
% \KeepSpace{3}
% \item[\Midx{\!\fncounteradjustment!}]\mbox{}
% \Item[\Midx{\!\nofncounteradjustment!}]\mbox{}\par
% The maintenance of \counter{footnote} with the starred footnote commands
% such as \!\footnote!|*| shown above causes out-of-order progress of the
% counter to make it hard to have a consistent counter value at
% \Endparacol.  The command \!\fncounteradjustment! is to let \Endparacol{}
% adjust the value of the counter based on its value at
% \beginparacol{} and the number of footnote commands in the environment.
% The command \!\nofncounteradjustment! is to tell \Endparacol{} to do
% nothing as in default.

使用上面展示的带星号的脚注命令（如!\footnote!|*|）来维护\counter{footnote}会导致计数器的顺序进展混乱，使得很难在\Endparacol{}处获得一致的计数器值。命令 \!\fncounteradjustment! 用于让\Endparacol{}根据其在\beginparacol{}处的值和环境中脚注命令的数量来调整计数器的值。命令 \!\nofncounteradjustment! 用于告诉\Endparacol{}不做任何调整，这是默认情况下的行为。
% 
% \begin{itemize}
% \item
% Though \!\footnotelayout! with |p|(age-wise) or |m|(erged) argument does
% \!\fncounteradjustment! while that with |c|(olumn) does
% \!\nofncounteradjustment! inside of it, you can override these settings by
% explicitly putting a counter adjustment command after \!\footnotelayout!.
% 
尽管使用|p|(age-wise)或|m|(erged)参数的 \!\footnotelayout! 会在其中执行 \!\fncounteradjustment!，而使用|c|(olumn)的 \!\footnotelayout! 会执行 \!\nofncounteradjustment!，但您可以通过在 \!\footnotelayout! 之后显式放置计数器调整命令来覆盖这些设置。
% \item
% The effect of \!\fncounteradjustment! is shown in Section~\ref{sec:fnnp}.

\!\fncounteradjustment! 的效果在第~\ref{sec:fnnp}~节中展示。
% \end{itemize}
% 

% \item[\Midx{\!\belowfootnoteskip!}]\mbox{}\par
% \changes{v1.35-4}{2018/12/31}
% 	{Add description of \cs{belowfootnoteskip}.}
% The typesetting parameter specifies the amount of the space inserted below
% footnotes of single-column \preenv{} if it does not have bottom floats.  The
% default amount is 0\,pt, i.e., no space is added.
% 
% typesetting参数指定了在单列\preenv{}的脚注下方插入的空间量，如果它没有底部浮动对象。默认的量是0,pt，即不添加任何空间。
% \end{description}
% 
% 
% \KeepSpace{6}
% \subsection{Commands for Coloring Texts and Column-Separating Rules}
% \label{sec:ref-tcolor}
% \changes{v1.3-3}{2013/09/17}
%	{Rename the sub-sectoin title from ``Commands for Text Coloring'' to
%	 ``Commands for Coloring Texts and Column-Separating Rules'' to
%	 add description of the rule coloring together with the rule
%	 drawing itself.}
% 
% \begin{description}
% \item[\Midx{\!\columncolor!}\oarg{mode}\marg{color}\oarg{col}]\mbox{}
% \Item[\Midx{\!\normalcolumncolor!}\oarg{col}]\mbox{}\par
% \changes{v1.2-1}{2013/05/11}
%	{Add description of \cs{columncolor} and \cs{normlcolumncolor}.}
% 
% The command \!\columncolor! declares that the \emph{default color} of a
% column is \meta{color} or what it specifies by the combination with the
% optional \meta{mode}.  The command \!\normalcolumncolor! declares the
% default color is what \!\normalcolor! specifies, i.e., black usually.  The
% target column of these commands is that in which the commands reside, or
% \meta{col} if it specified.
% 
% \begin{itemize}
% \item
% The command may be outside of \env{paracol} environment.  If so and
% \meta{col} is not provided, the target column is the leftmost 0.
% 
% \item
% The default color declaration is \emph{global}.  Therefore, even if the
% command appears in a \env{paracol} environment (and even in some grouping
% structure in it), the declaration will be kept effective after
% \Endparacol{} to determine the default color of the specified column in
% succeeding \env{paracol} environments.
% 
% \item
% To give a color to texts (and maybe other stuff) in a column correctly,
% you need to load \textsf{color} package or its relative (e.g.,
% \textsf{xcolor}) which the implementation of coloring in \textsf{paracol}
% relies on.
% 
% \item
% Coloring with \!\color!\oarg{mode}\marg{color} and other coloring commands
% in \env{paracol} environments is of course allowed.  One caution is that
% the \!\color! decides the color for following texts until other
% specification is given or the group surrounding the command is closed.
% Therefore, \!\switchcolumn! does not affect the coloring but a color given
% to the texts in a column is also applied to the texts in the column to be
% switched to.  This irrelativeness of coloring and \cswitch{} is shown in
% the example below.
% 
% \twosided[]\columnratio{0.5}\columnsep0pt
% \tolerance5000\hbadness5000
% \begin{paracol}{2}
% \columncolor{blue}
% This column is colored blue because\\
% \mbox{}\qquad \!\columncolor!|{blue}|\\
% is specfied.  Here we have a \!\switchcolumn!.
% \switchcolumn
% \columncolor{red}
% This column is colored red because\\
% \mbox{}\qquad\!\columncolor!|{red}|\\
% is specified.
% 
% \begin{color}{green}
% Now the color of the right column is changed to green because\\
% \mbox{}\qquad\!\begin!|{color}{green}|\\
% is given prior to this paragraph.  Now we have another \!\switchcolumn! to
% go back to the left.
% \switchcolumn
% The color of this paragraph is green because we are still in the
% environment of green coloring, which we are now closing.\par
% \end{color}%
% 
% Since the coloring environment has been closed, the color of this
% paragraph is the default blue.  Now we have yet another and the last
% \!\switchcolumn! to the right.
% \switchcolumn
% Since this paragraph is outside of the coloring environment, its color is
% the default red.
% \end{paracol}
% 
% \normalcolumncolor[0]\normalcolumncolor[1]
% The default coloring of columns does not affect anything outside of
% \env{paracol} environment of course, and thus this sentence is not
% colored\footnote{
% 
% Or colored black as \cs{normalcolor} specifies.}.
% \end{itemize}
% 
% 
% 
% \KeepSpace{4}
% \item[\Midx{\!\coloredwordhyphenated!}]\mbox{}
% \Item[\Midx{\!\nocoloredwordhyphenated!}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{coloredwordhyphenated} and
%	 \cs{nocoloredwordhyphenated}.}
% 
% The command \!\coloredwordhyphenated! allows the first word following a
% coloring command such as \!\color! to be hyphenated, but at the same time
% make it possible that a line is broken before the word.  The command
% \!\nocoloredwordhyphenated! acts oppositely and thus line breaking before
% the first word and hyphenating it are inhibited.  By default,
% \!\coloredwordhyphenated! is effective.
% 
% \begin{itemize}
% \item
% The implementation of \textsf{color} package and its relatives makes it
% impossible that \meta{word} is hyphenated when it appears like
% |{|\!\color!|{red}|\meta{word} \ldots|}| or
% \!\textcolor!|{|\meta{word} \ldots|}|.  This inhibition of the hyphenation
% is sometimes annoying especially when the document is multi-columned and
% thus a line is narrow and a column is written in a language having long
% words such as German.  Therefore in \Paracol{} package, a trick is used to
% allow the \meta{word} is hyphenated.  However this trick being insertion
% of a null horizontal space has a side effect that the word can have a line
% break before it.  Though this line break is usually unharmful, in a
% special occasion the break is undesirable and
% in\textcolor{red}{appropriate} by making it possible that the
% \emph{half-colored} word `inappropriate' is broken between `in' and
% `appropriate' without hyphenation.  Therefore, if you find such a
% inappropriate break, use \!\nocoloredwordhyphenated! as follows, for example.
% \begin{quote}
% |{\nocoloredwordhyphenated in\textcolor{red}{appropriate}}|
% \end{quote}
% \end{itemize}
% 
% 
% \KeepSpace{4}
% \item[\Midx{\!\colseprulecolor!}\oarg{mode}\marg{color}\oarg{col}]\mbox{}
% \Item[\Midx{\!\normalcolseprulecolor!}\oarg{col}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{colseprulecolor} and
%	 \cs{normalcolseprulecolor}.}
% 
% The command \!\colseprulecolor! declares the color for
% {\em\Uidx\cseprule{}s}, being the vertical rules drawn at the center of
% gaps between columns, is \meta{color} or what it specifies by the
% combination with the optional \meta{mode}.  The command
% \!\normalcolseprulecolor! declares the color of rules is what
% \!\normalcolor! specifies, i.e., black usually.  If the optional argument
% \meta{col} is given, these commands specifies the color of the rule in the
% gap following the column whose ordinal is \meta{col}, rather than all rules.
% 
% \begin{itemize}
% \item
% The rules are drawn if \LaTeX's typesetting parameter \!\columnseprule!
% for the rule width has non-zero value, e.g., 0.4\,|pt| to obey the
% standard rule thickness.  The rules are \emph{not} drawn on \pwstuff{},
% i.e., \Preenv{} and \postenv, \pwise{} floats or (\mgfnote{} or
% non-merged) \Scfnote{}s of course but also \mctext{}s.  Therefore, if a
% page has \mctext{}s, the rules are {\em broken} by them as shown in the
% red rule example below.
% \global\unitlength\@totalleftmargin
% \end{itemize}
% \end{description}
% 
% \columnseprule0.4pt\colseprulecolor{red}[1]\colseprulecolor{white}[0]
% \setcolumnwidth{\unitlength/0pt}
% \begin{paracol}{3}\switchcolumn\noindent 
% This is a left column paragraph preceding a \mctext.  Of cource the rule
% separating this and the next column starts from the top of this paragraph.
% \switchcolumn\noindent
% This is a right column paragraph preceding a \mctext{} given by the
% \!\switchcolumn!|*| at its end.
% \switchcolumn[1]*[\subsubsection*{\hbox to\unitlength{}
% An Example of Spanning Text Given by \cs{subsubsection}|*| Command}]
% Since we have a \mctext{} above, the red rule separating this and the next
% column is broken by the text.
% \switchcolumn
% It is also natural that the rule separating this and the previous column is
% terminated at the end of this \env{paracol} environment.
% \end{paracol}
% \columnseprule0pt\columnratio{}
% 
% \begin{description}
% \Item[]\mbox{}
% \begin{itemize}
% \Item
% To give a color to rules correctly, you need to load \textsf{color}
% package or its relative (e.g., \textsf{xcolor}) which the implementation
% of coloring in \textsf{paracol} relies on.
% 
% \item
% Once you give a color to rules in a specific gap with the optional
% \meta{col}, another \!\colseprulecolor! or \!\normalcolseprulecolor!
% without \meta{col} does \emph{not} change the color of the rule in the
% gap.
% \end{itemize}
% \end{description}
% 
% 
% 
% \KeepSpace{7}
% \subsection{Commands for Background Painting}
% \label{sec:ref-bgpaint}
% \changes{v1.3-3}{2013/09/17}
%	{Add the sub-section ``Commands for Background Painting.}
% 
% \begin{description}
% \item[\Midx{\!\backgroundcolor!}\marg{region}\oarg{mode}\marg{color}]
%     \mbox{}\par
% \Item[\Midx{\!\backgroundcolor!}
%     \Arg{\meta{region}$|(|x_0|,|y_0|)|$}\oarg{mode}\marg{color}]
%     \mbox{}\par
% \Item[\Midx{\!\backgroundcolor!}
%     \Arg{\meta{region}$|(|x_0|,|y_0|)||(|x_1|,|y_1|)|$}
%     \oarg{mode}\marg{color}]
%     \mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{backgroundcolor}.}
% 
% The command declares that {\em\Uidx\bgpaint} of \meta{region} is performed
% with \meta{color} or what it specifies by the combination of the optional
% \meta{mode}.  The \meta{region} whose \bground{} is painted is one of the
% following.
% 
% \begin{description}
% \item[|c|\rm(\textit{olumn})] for all columns, or particular one if
% \meta{region} is |c|\oarg{col} to specify its ordinal \meta{col}.
% 
% \item[|g|\rm(\textit{ap})] for all gaps between columns, or particular one
% if \meta{region} is |g|\oarg{col} to specify the ordinal \meta{col} of the
% column preceding the gap.
% 
% \item[|s|\rm(\textit{panning})] for \mctext{}s.
% 
% \item[|f|\rm(\textit{loat})] for \pwise{} floats.
% 
% \item[|n|\rm(\textit{ote})] for (\mgfnote{} or non-merged) \Scfnote{}s.
% 
% \item[|p|\rm(\textit{re/post})] for \Preenv{} and \postenv.
% 
% \item[|t|\rm(\textit{op})] for top margin.
% 
% \item[|b|\rm(\textit{ottom})] for bottom margin.
% 
% \item[|l|\rm(\textit{eft})] for left margin.
% 
% \item[|r|\rm(\textit{ight})] for right margin.
% \end{description}
% 
% In addition, capitals of the keys above, i.e., |C|, |G|, \ldots, |L|, are
% also legitimate for {\em under painting}.  For example, you may specify to
% paint the \bground{} of a region, say top margin, by two
% \!\backgroundcolor! with |t| and |T| and with different color arranging the
% size of the region of either |t| or |T| (or both of them) by the
% \emph{\bgext} option shown below.
% 
% The optional $|(|x_0|,|y_0|)|$ is to enlarge the region to be painted
% shifting its left-top and right-bottom corner outside by
% the dimension $x_0$ horizontally and $y_0$ vertically, or to shrink it
% with negative dimensions.  This {\em\Uidx\bgext} can be asymmetric giving
% another optional $|(|x_1|,|y_1|)|$ so that it acts on the right-bottom
% corner while let $|(|x_0|,|y_0|)|$ shift only the left-top corner.
% Moreover, you may make each \bgext{} {\em infinite} by giving 10000\,|pt|
% (about 3.5\,m) to $x_0$, $y_0$, $x_1$ and/or $y_1$ so that the
% corresponding region edge is shifted to the paper edge.  Furthermore, this
% {\em\Uidx\bginfext{}} can be terminated at the point $\alpha$ inside the
% corresponding paper edge by giving $10000\,|pt|-\alpha$
% ($\alpha\leq1000\,|pt|$) to an extension parameter $x_0$, etc.
% 
% \begin{itemize}
% \item
% A region whose color is not specified is not painted and thus left blank
% (or kept as painted by \!\pagecolor! if you specify it).
% 
% \item
% Under-painting of columns and gaps by |C| and |G| is made for regions
% different from those over-painting |c| and |g|.  That is, under-painting
% is done ignoring all \pwstuff{} and thus the height of the regions is
% always $\!\textheight!+\!\maxdepth!$.  On the other hand, over-painting is
% only for chunks shrunk or separated by \pwstuff.
% 
% \item
% You may exploit the following painting order, where $x_i$
% is the $i$-th \mctext{} ($x\in\{|s|,|S|\}$) or $i$-th chunk followed by
% the $i$-th \mctext, $m$ and $n$ is the number of \mctext{}s and columns in
% a page respectively, to overlay a preceding region with a succeeding
% region, if your \emph{printer} allows overlaid color painting.
% 
% \begin{eqnarray*}
% |T|&\to&|B|\to|L|\to|R|
%     \to|G[|0|]|\to\cdots\to|G[|n{-}1|]|\to|C[|0|]|\to\cdots\to|C[|n{-}1|]|\\
% &\to&|t|\to|b|\to|l|\to|r|\to|N|\to|n|\to\{|F|,|P|\}\to\{|f|,|p|\}
%  \to|S|_1\to\cdots\to|S|_m\\
% &\to&|g|_1|[|0|]|\to\cdots|g|_1|[|n{-}2|]|\to
%      |c|_1|[|0|]|\to\cdots|c|_1|[|n{-}1|]|\to|s|_1\\
% &\to&\cdots\\
% &\to&|g|_m|[|0|]|\to\cdots|g|_m|[|n{-}2|]|\to
%      |c|_m|[|0|]|\to\cdots|c|_m|[|n{-}1|]|\to|s|_m\\
% &\to&|g|_{m+1}|[|0|]|\to\cdots|g|_{m+1}|[|n{-}2|]|\to
%      |c|_{m+1}|[|0|]|\to\cdots|c|_m|[|n{-}1|]|
% \end{eqnarray*}
% 
% \item
% If you specify |b| feature by \!\twosided!, \bgpaint{} is
% {\em\Uidx\mirror{}ed} in even-numbered pages so that |l| and |L| mean
% right margin, |r| and |R| mean left margin, and asymmetric extensions are
% applied to right-top and left-bottom corners.
% 
% \item
% To give a color for \bgpaint{} correctly, you need to load \textsf{color}
% package or its relative (e.g., \textsf{xcolor}) which the implementation
% of coloring in \textsf{paracol} relies on.
% 
% \item
% To paint margins and regions having infinite extension correctly, the
% parameters \!\paperwidth! and \!\paperheight! should be set properly by,
% for example, a paper selection option of \!\documentclass!.
% 
% \item
% Section~\ref{sec:bgpaint} shows examples of \bgpaint{} to give you more
% intutive explanations of \!\backgroundcolor! and its region specifications.
% \end{itemize}
% 
% 
% 
% \item[\Midx{\!\nobackgroundcolor!}\marg{region}]\mbox{}
% \Item[\Midx{\!\resetbackgroundcolor!}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{nobackgroundcolor} and
%	 \cs{resetbackgroundcolor}.}
% 
% The command \!\nobackgroundcolor! declares that the \bground{} of
% \meta{region} is not painted, where \meta{region} is one of legitimate
% region specifiers of \!\backgroundcolor!.  The command
% \!\resetbackgroundcolor! declares no regions are painted and thus gives
% you the default state.
% 
% \begin{itemize}
% \item
% If you specified the \bgpaint{} of |c|\oarg{col} or |g|\oarg{col} by
% \!\backgroundcolor!, the painting is \emph{not} canceled by
% \!\nobackgroundcolor! with |c| or |g| but without \oarg{col}.  Similarly,
% once you made declarations of \bgpaint{} of both |c| and |c|\oarg{col}
% (resp.\ |g| and |g|\oarg{col}), \!\nobackgroundcolor! with |c|\oarg{col}
% (resp.\ |g|\oarg{col}) cancels the painting of |c|\oarg{col} (resp.\
% |g|\oarg{col}) but the region will still be painted by the color you gave
% to |c| (resp.\ |g|).
% \end{itemize}
% 
% 
% 
% \item[\Midx{\!\pagerim!}]\mbox{}\par
% \changes{v1.3-3}{2013/09/17}
%	{Add description of \cs{pagerim}.}
% 
% This is a (kind of) \emph{length command}\footnote{
% 
% In reality, it is a \cs{dimen} register rather than a \cs{skip} register.}
% 
% to have the width of the \emph{rim} area placed at each paper edge to 
% inhibit \bgpaint{} in the area.  That is, the inner edges of the area are
% considered as virtual paper edges to block painting of all margins and
% regions having \bginfext{} to the edges, for example in order to
% avoid printing troubles caused by painting the rim area too close to the
% real paper edges.  The default value of \!\pagerim! is 0 to allow paint
% anywhere in a paper.
% \end{description}
% 
% 
% 
% \subsection{Control of Contents Output}
% \label{sec:ref-contents}
% 
% \begin{description}
% \item[\Midx{\!\addcontentsonly!}\marg{file}\marg{col}]\mbox{}\par
% The command inhibits the output of contents information to
% $\meta{file}\in\{|toc|,|lof|,|lot|\}$ from columns other than \meta{col}.
% 
% \begin{itemize}
% \item
% For example, this manual has \!\addcontentsonly!|{toc}{0}| to
% inhibit the contents information output from \!\subsection! commands
% in the right column in Section~\ref{sec:env} and~\ref{sec:float},
% or the table should have duplicated entries of sub-sections.
% 
% \item
% It must be $\meta{file}\in\{|toc|,|lof|,|lot|\}$, or you will have an
% error message of illegal type of contents file.
% \end{itemize}
% \end{description}
% 
% 
% 
% \subsection{Page Flushing Commands}
% \label{sec:ref-flush}
% 
% \begin{description}
% \item[\Midx{\!\flushpage!}]\mbox{}\par
% The command flushes pages up to the {\em\Uidx\tpage} in which the \lcolumn{}
% resides.  Deferred floats which can be put in the pages up to the \tpage{}
% are also flushed.
% 
% \item[\Midx{\!\clearpage!}]\mbox{}\par
% The command does what \!\flushpage! does and then flushes all floats still
% deferred if any.  The deferred float flushing beyond the \tpage{} takes
% place at first for \cwise{} ones creating \fcolumn{}s for them, and
% then for \pwise{} ones creating {\em\Uidx\fpage{}s} only with
% \pwise{} floats, as \LaTeX's \!\clearpage! does outside \env{paracol}
% environment.
% 
% \item[\Midx{\!\cleardoublepage!}]\mbox{}\par
% \changes{v1.3-5}{2013/09/17}
%	{Add description of \cs{cleardoublepage}.}
% The command does what \LaTeX's \!\cleardoublepage! does outside
% \env{paracol}.  That is, it does \!\clearpage! always and then leaves a
% blank page if it is even-numbered and two-sided |p|(age) feature is
% enabled by |twoside| option of \!\documentclass! or \Paracol's own
% \!\twosided! command shown in Section~\ref{sec:ref-twoside}.
% 
% \begin{itemize}
% \item
% This command is equivalent to \!\clearpage! in \env{paracol} environments
% for \npaired{} \parapag{}ing because \!\clearpage! flushes \emph{both}
% left and right \parapag{}es.
% \end{itemize}
% \end{description}
\endinput
